<?xml version='1.0' encoding='utf-8'?>
<icferst_options>
  <simulation_name>
    <string_value lines="1">3D_Sod_Shock_test</string_value>
  </simulation_name>
  <inertia_dominated_simulator/>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="src/3d_mesh_f">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <simulation_quality>
      <string_value>balanced</string_value>
    </simulation_quality>
    <Advance_options>
      <Conservative_formulation_settings name="Velocity">
        <conservative_advection>
          <real_value rank="0">0.0</real_value>
        </conservative_advection>
      </Conservative_formulation_settings>
      <Conservative_formulation_settings name="Tracer">
        <conservative_advection>
          <real_value rank="0">0.0</real_value>
        </conservative_advection>
      </Conservative_formulation_settings>
    </Advance_options>
  </geometry>
  <solver_options>
    <Non_Linear_Solver>
      <integer_value rank="0">3</integer_value>
    </Non_Linear_Solver>
  </solver_options>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">10</integer_value>
      </constant>
    </dump_period_in_timesteps>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">5e-4</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">0.075</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="phase1">
    <phase_properties>
      <Density>
        <compressible>
          <linear_in_pressure>
            <coefficient_A>
              <real_value rank="0">2.5</real_value>
            </coefficient_A>
            <coefficient_B>
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </coefficient_B>
            <include_internal_energy/>
          </linear_in_pressure>
        </compressible>
      </Density>
      <Viscosity>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1</real_value>
                </constant>
              </isotropic>
            </value>
          </prescribed>
        </tensor_field>
        <viscosity_scheme>
          <tensor_form/>
          <nonlinear_scheme/>
        </viscosity_scheme>
      </Viscosity>
      <Stabilisation>
        <Petrov_Galerkin_stabilisation>
          <method>
            <integer_value rank="0">2</integer_value>
          </method>
          <nonlinear_velocity_coefficient>
            <real_value rank="0">1</real_value>
          </nonlinear_velocity_coefficient>
          <include_pressure>
            <real_value rank="0">1</real_value>
          </include_pressure>
          <stress_form/>
        </Petrov_Galerkin_stabilisation>
      </Stabilisation>
    </phase_properties>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  val=0.1
  if (X[0]&lt;0.5): val=1.
  return val</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">0.1</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <no_interpolation/>
      </prognostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="3" dim1="dim" rank="1">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="left">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="sides">
          <surface_ids>
            <integer_value shape="2" rank="1">2 3</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="Density" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  val=0.125
  if (X[0]&lt;0.5): val=1.
  return val</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">0.125</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="PhaseVolumeFraction" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">1</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="left">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">1</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Temperature" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
  g=1.4
  p=0.1
  rho=0.125
  if(X[0]&lt;0.5):
   p=1.0
   rho=1.
  return p/((g-1.)*rho)</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
  g=1.4
  p=0.1
  rho=0.125
  return p/((g-1.)*rho)</string_value>
            </python>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <multiphase_properties>
      <immobile_fraction>
        <scalar_field name="value">
          <prescribed>
            <mesh name="P0DG"/>
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.3</real_value>
              </constant>
            </value>
            <stat/>
            <detectors>
              <exclude_from_detectors/>
            </detectors>
          </prescribed>
        </scalar_field>
      </immobile_fraction>
    </multiphase_properties>
  </material_phase>
</icferst_options>
