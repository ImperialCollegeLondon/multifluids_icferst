<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>boiling_test_2phases</name>
  <owner userid="pan.yang"/>
  <tags>mpml boiling tbc</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>../../../bin/multiphase_prototype boil_h.mpml</command_line>
  </problem_definition>
  <variables>
    <variable name="int_sat1" language="python">from fluidity_tools import stat_parser as stat
int_sat1 = stat("boil_h.stat")["phase1"]["PhaseVolumeFraction"]["integral"][-1]</variable>
    <variable name="int_sat2" language="python">from fluidity_tools import stat_parser as stat
int_sat2 = stat("boil_h.stat")["phase2"]["PhaseVolumeFraction"]["integral"][-1]</variable>
    <variable name="p1_max_T" language="python">from fluidity_tools import stat_parser as stat
p1_max_T = stat("boil_h.stat")["phase1"]["Temperature"]["max"][-1]</variable>
    <variable name="p1_min_T" language="python">from fluidity_tools import stat_parser as stat
p1_min_T = stat("boil_h.stat")["phase1"]["Temperature"]["min"][-1]</variable>
    <variable name="p2_max_T" language="python">from fluidity_tools import stat_parser as stat
p2_max_T = stat("boil_h.stat")["phase2"]["Temperature"]["max"][-1]</variable>
    <variable name="p2_min_T" language="python">from fluidity_tools import stat_parser as stat
p2_min_T = stat("boil_h.stat")["phase2"]["Temperature"]["min"][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Assert final int sat 1" language="python">assert(abs(int_sat1 - 0.001607974) &lt; 1.60797E-05)</test>
    <test name="Assert final int sat 2" language="python">assert(abs(int_sat2 - 0.000338862) &lt; 3.38862E-06)</test>
    <test name="Assert final p1 max T" language="python">assert(abs(p1_max_T - 100.8751152) &lt; 0.100875115)</test>
    <test name="Assert final p1 min T" language="python">assert(abs(p1_min_T - 100.5695921) &lt; 0.100569592)</test>
    <test name="Assert final p2 max T" language="python">assert(abs(p2_max_T - 100.8744672) &lt; 0.100874467)</test>
    <test name="Assert final p2 min T" language="python">assert(abs(p2_min_T - 100.1480654) &lt; 0.100148065)</test>
  </pass_tests>
  <warn_tests/>
</testproblem>
