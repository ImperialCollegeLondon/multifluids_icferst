<?xml version='1.0' encoding='utf-8'?>
<icferst_options>
  <simulation_name>
    <string_value lines="1">3D_Sod_Shock_f</string_value>
  </simulation_name>
  <inertia_dominated_simulator/>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="src/3d_mesh_f">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <simulation_quality>
      <string_value>balanced</string_value>
    </simulation_quality>
    <Advance_options>
      <Conservative_formulation_settings name="Velocity">
        <conservative_advection>
          <real_value rank="0">0.0</real_value>
        </conservative_advection>
      </Conservative_formulation_settings>
      <Conservative_formulation_settings name="Tracer">
        <conservative_advection>
          <real_value rank="0">0.0</real_value>
        </conservative_advection>
      </Conservative_formulation_settings>
      <FE_Pressure/>
    </Advance_options>
  </geometry>
  <solver_options>
    <Non_Linear_Solver>
      <integer_value rank="0">3</integer_value>
    </Non_Linear_Solver>
  </solver_options>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">5e-3</real_value>
      </constant>
    </dump_period>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">5e-4</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">0.15</real_value>
    </finish_time>
    <adaptive_timestep>
      <requested_cfl>
        <real_value rank="0">1.0</real_value>
      </requested_cfl>
      <courant_number name="CFLNumber">
        <mesh name="VelocityMesh"/>
      </courant_number>
    </adaptive_timestep>
  </timestepping>
  <material_phase name="Air">
    <phase_properties>
      <Density>
        <compressible>
          <linear_in_pressure>
            <coefficient_A>
              <real_value rank="0">2.5</real_value>
            </coefficient_A>
            <coefficient_B>
              <constant>
                <real_value rank="0">0.0</real_value>
              </constant>
            </coefficient_B>
            <include_internal_energy/>
          </linear_in_pressure>
        </compressible>
      </Density>
      <Viscosity>
        <tensor_field name="Viscosity" rank="2">
          <diagnostic>
            <algorithm name="tensor_python_diagnostic" material_phase_support="single">
              <string_value type="code" language="python" lines="20">import math
Temperature = state.scalar_fields["Temperature"]

#Loop over all the nodes of the input field
for i in range(field.node_count):
 c = Temperature.node_val(i)
 
 #Formula
 val0=0.0
 val = ((1.45*c**(3/2))/(c+110))*(1.0*10**(-6.0))+val0 #Sutherland's Formula
 viscosity =  [[val, val, val],[val, val, val], [val, val, val]]
 #viscosity =  [[val, 0, 0],[0, val, 0], [0, 0, val]]
 #Assign the dummy field
 field.set( i, viscosity )</string_value>
            </algorithm>
            <mesh name="PressureMesh"/>
            <stat>
              <include_in_stat/>
            </stat>
          </diagnostic>
        </tensor_field>
        <viscosity_scheme>
          <compact_discontinuous_galerkin/>
          <nonlinear_scheme/>
        </viscosity_scheme>
      </Viscosity>
      <Stabilisation>
        <Petrov_Galerkin_stabilisation>
          <method>
            <integer_value rank="0">2</integer_value>
          </method>
          <nonlinear_velocity_coefficient>
            <real_value rank="0">1</real_value>
          </nonlinear_velocity_coefficient>
          <include_pressure>
            <real_value rank="0">1</real_value>
          </include_pressure>
          <stress_form/>
        </Petrov_Galerkin_stabilisation>
      </Stabilisation>
    </phase_properties>
    <scalar_field rank="0" name="Pressure">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X, t):
  val=0.1
  if (X[0]&lt;0.5): val=1.
  return val</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value rank="1" shape="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">0.1</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.05</real_value>
                  </constant>
                </value>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <galerkin_projection>
          <continuous>
            <solver/>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <vector_field rank="1" name="Velocity">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="1" dim1="dim" shape="3">0.0 0.0 0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="left">
          <surface_ids>
            <integer_value rank="1" shape="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="sides">
          <surface_ids>
            <integer_value rank="1" shape="2">2 3</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
      </prognostic>
    </vector_field>
    <scalar_field rank="0" name="Density">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X, t):
  val=0.125
  if (X[0]&lt;0.5): val=1.
  return val</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value rank="1" shape="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">0.125</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.05</real_value>
                  </constant>
                </value>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <galerkin_projection>
          <continuous>
            <solver/>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="PhaseVolumeFraction">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">1</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="left">
          <surface_ids>
            <integer_value rank="1" shape="4">1 2 3 4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <constant>
              <real_value rank="0">1</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <galerkin_projection>
          <continuous>
            <solver/>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="Temperature">
      <prognostic>
        <mesh name="PressureMesh"/>
        <initial_condition name="WholeMesh">
          <python>
            <string_value type="code" language="python" lines="20">def val(X, t):
  g=1.4
  p=0.1
  rho=0.125
  if(X[0]&lt;0.5):
   p=1.0
   rho=1.
  return p/((g-1.)*rho)</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="right">
          <surface_ids>
            <integer_value rank="1" shape="1">4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <apply_weakly/>
            <python>
              <string_value type="code" language="python" lines="20">def val(X, t):
  g=1.4
  p=0.1
  rho=0.125
  return p/((g-1.)*rho)</string_value>
            </python>
          </type>
        </boundary_conditions>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <adaptivity_options>
          <absolute_measure>
            <scalar_field rank="0" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="0">0.10</real_value>
                  </constant>
                </value>
                <stat/>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </scalar_field>
          </absolute_measure>
        </adaptivity_options>
        <galerkin_projection>
          <continuous>
            <solver/>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field rank="0" name="CFLNumber">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field rank="1" name="GalerkinProjection">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple" legacy="true"/>
        <source_field_name>Velocity</source_field_name>
        <mesh name="PressureMesh"/>
        <stat>
          <include_in_stat/>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <adaptivity_options>
          <absolute_measure>
            <vector_field rank="1" name="InterpolationErrorBound">
              <prescribed>
                <value name="WholeMesh">
                  <constant>
                    <real_value rank="1" dim1="dim" shape="3">0.05 0.05 0.05</real_value>
                  </constant>
                </value>
                <stat>
                  <include_in_stat/>
                </stat>
                <detectors>
                  <exclude_from_detectors/>
                </detectors>
              </prescribed>
            </vector_field>
          </absolute_measure>
        </adaptivity_options>
        <consistent_interpolation/>
      </diagnostic>
    </vector_field>
  </material_phase>
  <mesh_adaptivity>
    <hr_adaptivity>
      <period_in_timesteps>
        <integer_value rank="0">10</integer_value>
      </period_in_timesteps>
      <maximum_number_of_nodes>
        <integer_value rank="0">500000</integer_value>
      </maximum_number_of_nodes>
      <enable_gradation>
        <gradation_parameter>
          <real_value rank="0">2.0</real_value>
        </gradation_parameter>
      </enable_gradation>
      <tensor_field name="MinimumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">0.001 0 0 0 0.001 0 0 0 0.001</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <tensor_field name="MaximumEdgeLengths">
        <anisotropic_symmetric>
          <constant>
            <real_value symmetric="true" rank="2" dim1="dim" dim2="dim" shape="3 3">0.1 0 0 0 0.1 0 0 0 0.1</real_value>
          </constant>
        </anisotropic_symmetric>
      </tensor_field>
      <aspect_ratio_bound>
        <real_value rank="0">100</real_value>
      </aspect_ratio_bound>
      <adapt_at_first_timestep>
        <number_of_adapts>
          <integer_value rank="0">5</integer_value>
        </number_of_adapts>
      </adapt_at_first_timestep>
      <metric_advection>
        <spatial_discretisation>
          <control_volumes>
            <face_value name="FirstOrderUpwind"/>
          </control_volumes>
          <conservative_advection>
            <real_value rank="0">0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <maximum_courant_number_per_subcycle>
            <real_value rank="0">0.75</real_value>
            <courant_number name="ControlVolumeCFLNumber"/>
          </maximum_courant_number_per_subcycle>
          <control_volumes/>
        </temporal_discretisation>
        <solver>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">500</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
      </metric_advection>
      <project_continuity/>
    </hr_adaptivity>
  </mesh_adaptivity>
  <numerical_methods/>
</icferst_options>
