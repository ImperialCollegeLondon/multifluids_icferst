<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>Porous_media_general</name>
  <owner userid="pablo.salinas"/>
  <tags>porous mpml thermal P0DG</tags>
  <problem_definition length="short" nprocs="1">
    <command_line>../../../bin/icferst thermal_porous_compressible.mpml</command_line>
  </problem_definition>
  <variables>
    <variable name="max_temp" language="python">from fluidity_tools import stat_parser as stat
max_temp = stat("themal_porous.stat")["phase1"]["Temperature"]["max"][-1]</variable>
    <variable name="min_temp" language="python">from fluidity_tools import stat_parser as stat
min_temp = stat("themal_porous.stat")["phase1"]["Temperature"]["min"][-1]</variable>
    <variable name="max_rho" language="python">from fluidity_tools import stat_parser as stat
max_rho = stat("themal_porous.stat")["phase1"]["Density"]["max"][-1]</variable>
    <variable name="min_rho" language="python">from fluidity_tools import stat_parser as stat
min_rho = stat("themal_porous.stat")["phase1"]["Density"]["min"][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Assert final max temperature" language="python">assert(abs((max_temp - 49.8)/49.8) &lt; 0.01)</test>
    <test name="Assert final min temperature" language="python">assert(abs((min_temp - 21.14)/21.14) &lt; 0.01)</test>
    <test name="Assert final max density" language="python">assert(abs((max_rho - 1002.15)/1002.15) &lt; 0.01)</test>
    <test name="Assert final min density" language="python">assert(abs((min_rho - 998.79)/998.79) &lt; 0.01)</test>
  </pass_tests>
  <warn_tests/>
</testproblem>
