input.dat (legacy_reservoir_prototype)                                        Fluidity/Diamond
###
### Option for debugging: if =357, then all print statements will             Subroutines ewrite(), FLAbort() and FLExit() are used. Verbocity level
### be sent to the file flog.dat, otherwise to /dev/null                      is then specified by command line option -v. Debugging symbols
option_debug   1                                                              can be produced by configuring with --enable-debugging.

# Problem type: options -2, -1, 0, and 1                                      Problem type and discretisation type are described by several options in
problem               1                                                       the options tree.

# Number of phases                                                            User can add arbitrary number of phases via diamond and assign name to each
nphase                2                                                       phase. (options path /material_phase::phase1 for a phase named ``phase1'')

# Number of components                                                        User can add arbitrary number of scalar/vector/tensor fields via diamond
ncomp                 0                                                       and assign name to each . Such fields can be used to represent the various
                                                                              components (options path /material_phase::phase1/scalar_field::component1
                                                                              for a field named ``component1'' in phase named ``phase1'')

# total number of elements                                                    The total number of elements is calculated within Fluidity. The user
totele               20                                                       supplies a grid in a file which fluidity reads and counts the number of
                                                                              elements. ++A bit on grids to be added, point out that the user creates
                                                                              multiple grids and each field is associated with a grid. Then,
                                                                              element_count(phase1) returns the number of elements in the field
                                                                              ``phase1'' ++

# Dimensionality                                                              Dimensionality is explicitly prescribed by the user, in options path
ndim                  1                                                       /geometry/dimension .

# nlev --> controls u_snloc  -------------------------------------------|
nlev                  3                                                 |
                                                                        |
# Number of velocity nodes                                              |-->  Not explicitly specified, information obtained via tools in 
u_nloc                6                                                 |     femtools/Fields_Data_Types.F90
                                                                        |
# Number of spatial nodes associated w velocity                         |
xu_nloc               2                                                 |
                                                                        |
# number of nodes associated with CV                                    |
cv_nloc               3                                                 |
                                                                        |
# Number of spatial nodes                                               |
x_nloc                3                                                 |
                                                                        |
# Number of pressure nodes                                              |
p_nloc                3                                                 |
                                                                        |
# Number of surface nodes associated with CV                            |
cv_snloc              1                                                 |
                                                                        |
# Number of surface nodes associated w velocity                         |
u_snloc              -1                                                 |
                                                                        |
# Number of surface pressure nodes                                      |
p_snloc               1                                                 |
                                                                        |
# Number of surface spatial nodes                                       |
x_snloc               1                                                 |
                                                                        |
# Total number of surface elements                                      |
stotel                2   ----------------------------------------------|

# Number of coeffs for polynomial representation for EOS                      User can specify the equation of state for each material phase (eg. phase
ncoef                10                                                       ``phase1'') under /material_phase::phase1/equation_of_state. Currently it
                                                                              seems no polynomial EOS exists, an addition can be made.

# Number of coeffs for polynomial representation of permeability/absorption   User could create a scalar field under the relevant phase to represent
nuabs_coefs           1                                                       permeability/absorption. Then using the python option, one can easily
                                                                              prescribe a polynomial representation. ** This already exists. Permeability
                                                                              is available under the porous_media options /porous_media/scalar_field::
                                                                              Permeability and can be a scalar, vector or tensor field. Porosity is also
                                                                              there. Viscosity for each phase is a tensor field under velocity for that phase
                                                                              and absorption is also under velocity and may be used to carry the combined
                                                                              permeability/viscosity/relative permeability absorption term. **

# Option for element type: Velocity mesh   -----------------------------|
u_ele_type            2                                                 |
                                                                        |
# Option for element type: Pressure mesh                                |-->  Not explicitly specified, information obtained via tools in
p_ele_type            2                                                 |     femtools/Fields_Data_Types.F90
                                                                        |
# Option for element type: Material mesh                                |
mat_ele_type          1                                                 |
                                                                        |
# Option for element type: CV mesh                                      |
cv_ele_type           2                                                 |
                                                                        |
# Option for element type: CV surface mesh                              |
cv_sele_type          1                                                 |
                                                                        |
# Option for element type: Velocity surface mesh                        |
u_sele_type           1  -----------------------------------------------|

# Total number of time dumps                                                  The total number of dumps is not explicitly controled in Fluidity. The
ntime               160                                                       user only specifies the frequency of output and then fluidity will write
                                                                              to output files at that frequency until the end of run. The options are
                                                                              found at the path /io/. However, FLuidity does have the functionality of
                                                                              limiting the number of files: the option /io/max_dump_file_count can
                                                                              be used to specify the number of files output to disk, prior to
                                                                              over-writing existing files.

# Frequency in which files will be output into *.d.* files                    Option is controlled in /io. The user can specify: A constant dump period
ntime_dump           20                                                       in time-units, /io/dump_period/constant . A dump period in time-units via
                                                                              a python function, /io/dump_period/python . A constant dump period in 
                                                                              time-steps, /io/dump_period_in_timesteps/constant . A dump period in
                                                                              time-steps via a python function, /io/dump_period_in_timesteps/python .

# Total number of non-linear iterations                                       Controlled via option /timestepping/nonlinear_iterations. sub-options
nits                  3                                                       allow to specify the tolerance in various norms.

# Total number of non-linear iterations - internal loop                       Contolled via option /material_phase::phase1/scalar_field::component1/
nits_internal         1                                                       prognostic/temporal_discretisation/control_volumes and its sub options.
                                                                              Note that the aforementioned option is ``off'' by default in diamond and
                                                                              needs to be activated should the user want to. As indicated in the path,
                                                                              this option is set separately for each field in each phase.

# noit_dim : dimension of the arrays to be defined in later stage             The dimension of corresponding variables/arrays is not explicitly 
# (e.g., Field_error, Field_relax, Field_relax_diag, Field_relax_row          specified, it is calculated by fluidity itself. However, options related
# and Field_relax_number_iterations, with                                     to the matrix solver of each prognostic field are specified under the
# Field = volfra, scalar, velocity, global, pressure, mass_matrix)            solver part of the options tree, eg. /material_phase::phase1/
noit_dim 5                                                                    scalar_field::component1/prognostic/solver for a scalar_field
                                                                              ``component1'' in ``phase1''.

# Maximum number of non-linear iterations for scalar field (saturation /      !! Not sure !! Fluidity allows the face values in control-volume-type
# volume fraction (nits_flux_lim_volfra) and composition (nits_flux_lim_comp) discretisations to be calculated in a variety of ways, under options path
nits_flux_lim_volfra   3                                                      /material_phase::phase1/scalar_field::whatever_field/prognostic/
nits_flux_lim_comp     3                                                      spatial_discretisation/control_volumes/ .

# Option for modified CMC color algorithm(/=0), if <0==>ndpset=cv_nonods      ???
ndpset                0

# Time-step size                                                              Obtained from options path /timestepping/timestep .
dt                    0.3125e-2

# Reference pressure (not in use)
patmos                0.

# Initial pressure (not in use)
p_ini                 0.

# Initial temperature (or any scalar field, not in use)
t_ini                 0.

# Conservative(1.)/non-conservative(0.) flag for CV discretisation           Specified for each prognostic field, obtained from options path 
t_beta                0.                                                     /material_phase::phase1/scalar_field::whatever_field/prognostic/
                                                                             spatial_discretisation/conservative_advection .

# Conservative(1.)/non-conservative(0.) flag for Volfra discretisation       Specified for each prognostic field, obtained from options path 
v_beta                1.                                                     /material_phase::phase1/scalar_field::whatever_field/prognostic/
                                                                             spatial_discretisation/conservative_advection .

# Time-stepping discretisation parameter                                     Specified for each prognostic field, obtained from options path 
t_theta               0.                                                     /material_phase::phase1/scalar_field::whatever_field/prognostic/
                                                                             temporal_discretisation/theta .

# Time-stepping discretisation parameter                                     Specified for each prognostic field, obtained from options path
v_theta               1.                                                     /material_phase::phase1/scalar_field::whatever_field/prognostic/
                                                                             temporal_discretisation/theta .

# Time-stepping discretisation parameter (not in use)
u_theta               1.

# Disopt: discretisation option in space and time (see cv-adv-dif.f90)       Spatial discretisations options are specified for each prognostic field,
# = 8: Finite elements in space (Theta = specified;  Limiting: Downwind+)    at options path /material_phase::phase1/scalar_field::whatever_field/
t_disopt              1                                                      prognostic/spatial_discretisation .

# Disopt: discretisation option in space and time (see cv-adv-dif.f90)       Spatial discretisations options are specified for each prognostic field,
# = 0: 1st order in space (Theta=specified;  Limiting: universal)            at options path /material_phase::phase1/scalar_field::whatever_field/
u_disopt              1                                                      prognostic/spatial_discretisation .

# Disopt: discretisation option in space and time (see cv-adv-dif.f90)       Spatial discretisations options are specified for each prognostic field,
# = 0: 1st order in space (Theta=specified;  Limiting: universal) - in       at options path /material_phase::phase1/scalar_field::whatever_field/
# cv-adv-dif.F90, v_disopt --> cv_disopt                                     prognostic/spatial_discretisation .
v_disopt              8

#  t_dg_vel_int_opt: interface scalar field calculation option between elements  !! Not sure !! Fluidity allows for meshes to be created, based on
t_dg_vel_int_opt      0                                                      existing meshes, via options at path /geometry/mesh::some_mesh/from_mesh. 
                                                                             Fields can then be created on such meshes.

#  u_dg_vel_int_opt: interface velocity calculation option between elements  !! Not sure !! Fluidity allows for meshes to be created, based on
u_dg_vel_int_opt      4                                                      existing meshes, via options at path /geometry/mesh::some_mesh/from_mesh.
                                                                             Fields can then be created on such meshes.

#  v_dg_vel_int_opt: interface velocity calculation option between elements  !! Not sure !! Fluidity allows for meshes to be created, based on
v_dg_vel_int_opt      4                                                      existing meshes, via options at path /geometry/mesh::some_mesh/from_mesh.
                                                                             Fields can then be created on such meshes.

#  w_dg_vel_int_opt: interface velocity calculation option between elements  !! Not sure !! Fluidity allows for meshes to be created, based on
w_dg_vel_int_opt      0                                                      existing meshes, via options at path /geometry/mesh::some_mesh/from_mesh.
                                                                             Fields can then be created on such meshes.

# Lump_eqns: Lump multiphase flow equations                                  The user can specifiy if the mass matrix in the pde for a field should be
lump_eqns             F                                                      lumped, via activating option at path /material_phase::phase1/
                                                                             scalar_field::whatever_field/prognostic/spatial_discretisation/
                                                                             continuous_galerkin/mass_terms/lump_mass_matrix

# For compositional - work out theta-hat for flux                            !! Not sure !!
volfra_get_theta_flux        T
volfra_use_theta_flux        F

# Domain length                                                              Not explicitly specified, the user specifies a file containing the mesh at
domain_length         4.                                                     option with path /geometry/mesh::CoordinateMesh/from_file . The grid is 
                                                                             loaded by fluidity and relevant information is extracted.

# Capillary pressure option (for now we just have option = 1)                An arbitrary number of diagnostic fields can be created by the user, a
capil_pres_opt        0                                                      typical options path is then /material_phase::phase1/
                                                                             scalar_field::whatever_diagnostic_field/diagnostic . The user can then
                                                                             choose the algorithm to calculate the diagnostic, and specify related
                                                                             options. ** capillary pressure options are currently under /porous_media/
                                                                             multiphase_parameters but should probably be moved to /material_phase::phase1/
                                                                             multiphase_properties, and properly reworked **

# Polynomial representation for the cappilary pressure - order (length of the matrix)  An arbitrary number of diagnostic fields can be created by the
ncapil_pres_coef      0                                                      user, a typical options path is then /material_phase::phase1/
                                                                             scalar_field::whatever_diagnostic_field/diagnostic . The user can then 
                                                                             choose the algorithm to calculate the diagnostic, and specify related 
                                                                             options
