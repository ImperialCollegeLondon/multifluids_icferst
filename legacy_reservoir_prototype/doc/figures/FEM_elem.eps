%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 76 352 544 605 
%%LanguageLevel: 2
%%Creator: CorelDRAW 10
%%Title: CVcell.eps
%%CreationDate: Mon Nov 12 17:47:36 2001
%%For: Dr Cassiano R E de Oliveira
%%DocumentProcessColors: Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if dup
$frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt_cmyk{$fmp 50 eq{sub neg nff dup 1 gt{1 sub}if div/$dk xd sub
neg nff dup 1 gt{1 sub}if div/$dy xd sub neg nff dup 1 gt{1 sub}if div/$dm xd
sub neg nff dup 1 gt{1 sub}if div/$dc xd sub neg nff dup 1 gt{1 sub}if div/$dt
xd}{$fco nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/$dk xd nff
$fco sub div/$dk2 xd sub neg 2 div dup $fco div/$dy xd nff $fco sub div/$dy2 xd
sub neg 2 div dup $fco div/$dm xd nff $fco sub div/$dm2 xd sub neg 2 div dup
$fco div/$dc xd nff $fco sub div/$dc2 xd sub neg 2 div dup $fco div/$dt xd nff
$fco sub div/$dt2 xd}ifelse}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add
100 div round cvi dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq
or{$frt dup $frc $frm $fry $frk @tc_5 4 copy cmyk2rgb rgb2hsb 3 copy/myb xd
/mys xd/myh xd $tot $toc $tom $toy $tok @tc_5 cmyk2rgb rgb2hsb 3 1 roll 4 1
roll 5 1 roll @dlt_hsb}{$frt dup $frc $frm $fry $frk @tc_5 5 copy $tot dup $toc
$tom $toy $tok @tc_5 5 1 roll 6 1 roll 7 1 roll 8 1 roll 9 1 roll @dlt_cmyk}
ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop pop pop pop
myh mys myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{
kdb2 add 3 1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys
xd/myh xd hsb2rgb rgb2cmyk}{$fi $fco lt $fmp 50 eq or{$dk add 5 1 roll $dy add
5 1 roll $dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}{$dk2 add 5 1 roll
$dy2 add 5 1 roll $dm2 add 5 1 roll $dc2 add 5 1 roll $dt2 add 5 1 roll}ifelse
}ifelse}bd/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode_5 0 ne{$frn
findcmykcustomcolor exch setcustomcolor}{pop pop pop pop $frc $frm $fry $frk
$frn findcmykcustomcolor exch setcustomcolor}ifelse}ifelse}bd/@ftl{1 index 4
index sub dup $pad mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei
xd pop Tl @dlt $fss 0 eq{ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp $ffpnt
{fill}{@np}ifelse}if $fss $wid mul $pdw add 0 Tl nff{ffcol n 0 0 m 0 $hei l
$wid $hei l $wid 0 l @cp $ffpnt{fill}{@np}ifelse $wid 0 Tl @ffnxt}repeat 5 rp
$tot dup $toc $tom $toy $tok @tc_5 ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l
@cp $ffpnt{fill}{@np}ifelse 5 rp}bd/@ftrs{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl $fan rotate
pop pop pop pop @dlt $fss 0 eq{ffcol $fty 3 eq{$hei dup neg dup m 2 mul @sqr}{
0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse}if 1.0 $pad 2 mul sub
dup scale $hei $fss $wid mul sub/$hei xd nff{ffcol $fty 3 eq{n $hei dup neg dup
m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse/$hei
$hei $wid sub def @ffnxt}repeat 5 rp}bd/@ftc{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl pop pop pop
pop @dlt $fss 0 eq{ffcol $ffpnt{fill}{@np}ifelse}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{ffcol n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
$ffpnt{fill}{@np}ifelse 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add
arc $ffpnt{fill}{@np}ifelse/$sang $eang def/$eang $eang $dang add def @ffnxt}
repeat 5 rp}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul
exch dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst
def/$adj 1 def/$fss 0 def $o 1 eq setoverprint AutoSteps 0 gt{@fstAdjust}if 1 1
$fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul 5 getinterval aload pop pop
/$frk xd/$fry xd/$frm xd/$frc xd/$frn _ def/$frt 1 def $fsa exch 5 mul 5
getinterval aload pop $adj mul cvi $fss add/$fse xd/$tok xd/$toy xd/$tom xd
/$toc xd/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload pop pop
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd $fsa exch 7 mul 7 getinterval
aload pop $adj mul cvi $fss add/$fse xd/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd
/$toc xd}ifelse $fsit 0 eq SepMode_5 0 eq or dup not CurrentInkName_5 $frn eq
and or{@sv $ctm setmatrix wclip Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{1 index
3 index m 2 copy l 3 index 1 index l 3 index 3 index l @cp $fty dup 1 eq exch 3
eq or{@ftrs}{pop pop pop pop $fan rotate pathbbox @ftl}ifelse}ifelse @rs/$fss
$fse def}{1 0 0 0 0 _ $o @scc_5{wfill}if}ifelse}for @np/$fst old$fst def}bd/@k
{/$fil 2 def/$fmp xd/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0
def}if/$frb xd/$fst xd/$fsc xd/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$fmp xd
/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst
xd/$fsc xd/$fsa xd/$fsit 1 def}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
87.71783 362.06476 359.82935 595.88872 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
87.71783 595.88872 m
359.82935 595.88872 L
359.82935 362.06476 L
87.71783 362.06476 L
87.71783 595.88872 L
@c
S

@rax %Note: Object
351.62532 587.68554 366.10384 601.35959 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.00 0.00 0.20 0.80  128
] 2 128 0 0.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
358.86444 601.35959 m
362.85165 601.35959 366.10384 598.28854 366.10384 594.52299 c
366.10384 590.75688 362.85165 587.68554 358.86444 587.68554 c
354.87723 587.68554 351.62532 590.75688 351.62532 594.52299 c
351.62532 598.28854 354.87723 601.35959 358.86444 601.35959 c
@c
B

@rax %Note: Object
412.64107 579.01578 427.11959 592.68983 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.00 0.00 0.20 0.80  128
] 2 128 0 0.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
419.88019 592.68983 m
423.86740 592.68983 427.11959 589.61877 427.11959 585.85323 c
427.11959 582.08712 423.86740 579.01578 419.88019 579.01578 c
415.89298 579.01578 412.64107 582.08712 412.64107 585.85323 c
412.64107 589.61877 415.89298 592.68983 419.88019 592.68983 c
@c
B

@rax %Note: Object
82.24753 589.05269 96.72690 602.72589 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.00 0.00 0.20 0.80  128
] 2 128 0 0.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
89.48608 602.72589 m
93.47414 602.72589 96.72690 599.65512 96.72690 595.88872 c
96.72690 592.12431 93.47414 589.05269 89.48608 589.05269 c
85.49943 589.05269 82.24753 592.12431 82.24753 595.88872 c
82.24753 599.65512 85.49943 602.72589 89.48608 602.72589 c
@c
B

@rax %Note: Object
82.86633 357.21383 97.34343 370.88759 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.00 0.00 0.20 0.80  128
] 2 128 0 0.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
90.10573 370.88759 m
94.09238 370.88759 97.34343 367.81654 97.34343 364.05099 c
97.34343 360.28488 94.09238 357.21383 90.10573 357.21383 c
86.11880 357.21383 82.86633 360.28488 82.86633 364.05099 c
82.86633 367.81654 86.11880 370.88759 90.10573 370.88759 c
@c
B

@rax %Note: Object
351.49351 356.46520 365.97345 370.13811 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.00 0.00 0.20 0.80  128
] 2 128 0 0.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
358.73405 370.13811 m
362.72098 370.13811 365.97345 367.06677 365.97345 363.30151 c
365.97345 359.53569 362.72098 356.46520 358.73405 356.46520 c
354.74627 356.46520 351.49351 359.53569 351.49351 363.30151 c
351.49351 367.06677 354.74627 370.13811 358.73405 370.13811 c
@c
B

@rax 203.56413 584.33272 225.91616 604.94797 @E
[0.00028346 0.00000000 0.00000000 0.00028346 204.41819725 584.33270303] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ZurichExBT 100985.00000 z
%CHAR: 0 0 (X) @t
-3013 0 m
30279 37465 L
202 72726 L
14357 72726 L
37381 44130 L
61197 72726 L
74763 72726 L
44231 38156 L
75840 0 L
62325 0 L
37280 31305 L
10890 0 L
-3013 0 L
@c
F
T
@rax 76.88239 474.80967 99.23443 495.42491 @E
[0.00028346 0.00000000 0.00000000 0.00028346 77.73646960 474.80965192] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ZurichExBT 100985.00000 z
%CHAR: 0 0 (X) @t
-3013 0 m
30279 37465 L
202 72726 L
14357 72726 L
37381 44130 L
61197 72726 L
74763 72726 L
44231 38156 L
75840 0 L
62325 0 L
37280 31305 L
10890 0 L
-3013 0 L
@c
F
T
@rax 203.69707 352.98000 226.04910 373.59524 @E
[0.00028346 0.00000000 0.00000000 0.00028346 204.55114212 352.97998709] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ZurichExBT 100985.00000 z
%CHAR: 0 0 (X) @t
-3013 0 m
30279 37465 L
202 72726 L
14357 72726 L
37381 44130 L
61197 72726 L
74763 72726 L
44231 38156 L
75840 0 L
62325 0 L
37280 31305 L
10890 0 L
-3013 0 L
@c
F
T
@rax 348.86381 475.03276 371.21584 495.64800 @E
[0.00028346 0.00000000 0.00000000 0.00028346 349.71787697 475.03273853] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ZurichExBT 100985.00000 z
%CHAR: 0 0 (X) @t
-3013 0 m
30279 37465 L
202 72726 L
14357 72726 L
37381 44130 L
61197 72726 L
74763 72726 L
44231 38156 L
75840 0 L
62325 0 L
37280 31305 L
10890 0 L
-3013 0 L
@c
F
T
@rax 411.60019 491.31213 433.95222 511.92737 @E
[0.00028346 0.00000000 0.00000000 0.00028346 412.45425263 491.31210801] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ZurichExBT 100985.00000 z
%CHAR: 0 0 (X) @t
-3013 0 m
30279 37465 L
202 72726 L
14357 72726 L
37381 44130 L
61197 72726 L
74763 72726 L
44231 38156 L
75840 0 L
62325 0 L
37280 31305 L
10890 0 L
-3013 0 L
@c
F
T
@rax %Note: Object
204.35329 474.28441 230.93065 499.89515 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.98425 1.98425 0.00000 @w
/$fm 0 def
217.64296 499.89515 m
224.96117 499.89515 230.93065 494.14280 230.93065 487.09020 c
230.93065 480.03704 224.96117 474.28441 217.64296 474.28441 c
210.32334 474.28441 204.35329 480.03704 204.35329 487.09020 c
204.35329 494.14280 210.32334 499.89515 217.64296 499.89515 c
@c
S

@rax %Note: Object
408.18132 530.99858 434.75868 556.60932 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 1.98425 1.98425 0.00000 @w
/$fm 0 def
421.47099 556.60932 m
428.78920 556.60932 434.75868 550.85698 434.75868 543.80438 c
434.75868 536.75121 428.78920 530.99858 421.47099 530.99858 c
414.15137 530.99858 408.18132 536.75121 408.18132 543.80438 c
408.18132 550.85698 414.15137 556.60932 421.47099 556.60932 c
@c
S

@rax 449.91383 577.25320 489.48775 593.27688 @E
[0.00028346 0.00000000 0.00000000 0.00028346 449.91381031 579.80634100] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 71766.00000 z
%CHAR: 0 0 (U) @t
9389 47521 m
29472 47521 L
29089 46217 L
27032 46169 25561 45978 24688 45643 c
23814 45308 23061 44698 22439 43837 c
21829 42976 21183 41373 20501 39041 c
15633 22212 l
14760 19221 14246 17260 14090 16327 c
13803 14832 13671 13444 13671 12164 c
13671 9330 14712 6949 16817 4988 c
18922 3038 21733 2069 25262 2069 c
27582 2069 29651 2500 31469 3385 c
33287 4258 34854 5478 36146 7057 c
37438 8636 38634 10777 39699 13468 c
40775 16171 41720 18898 42545 21661 c
46744 36158 l
47796 39782 48322 42139 48322 43239 c
48322 44016 47964 44674 47258 45225 c
46540 45775 45105 46098 42928 46217 C
43311 47521 L
58418 47521 L
58035 46217 L
56253 46217 54973 46050 54195 45715 c
53406 45368 52724 44770 52138 43885 c
51564 43012 50906 41313 50176 38790 c
45033 21171 l
43371 15442 41804 11219 40332 8492 c
38861 5777 36732 3493 33933 1663 c
31146 -167 27678 -1088 23551 -1088 c
18779 -1088 14939 263 12021 2966 c
9102 5658 7643 8743 7643 12224 c
7643 13612 7763 15083 8026 16650 c
8217 17678 8672 19449 9389 21972 c
14090 38132 l
14736 40464 15071 42174 15071 43275 c
15071 44136 14736 44818 14066 45296 c
13408 45775 11722 46086 9043 46217 C
9389 47521 L
@c
F
%CHAR: 51827 0 (,) @t
51085 -7882 m
52844 -7093 54267 -6088 55367 -4868 c
56205 -3935 56623 -3038 56623 -2177 c
56623 -1746 56564 -1364 56420 -1017 c
56324 -825 56001 -455 55439 108 c
54877 670 54566 1053 54494 1256 c
54327 1663 54243 2117 54243 2631 c
54243 3636 54590 4497 55284 5227 c
55966 5945 56779 6303 57712 6303 c
58669 6303 59518 5921 60260 5155 c
60989 4378 61360 3409 61360 2249 c
61360 167 60547 -1938 58908 -4067 c
57269 -6196 54901 -7834 51791 -9007 C
51085 -7882 L
@c
F
%CHAR: 87709 0 (V) @t
98605 -1088 m
102529 38479 l
102720 40488 102816 41840 102816 42545 c
102816 43598 102421 44471 101644 45165 c
100854 45870 99622 46217 97936 46217 c
96680 46217 L
97027 47521 L
115781 47521 L
115387 46217 L
113365 46193 111966 45990 111200 45595 c
110447 45189 109849 44519 109394 43562 c
109167 43048 108916 41588 108665 39172 c
105866 10825 L
124393 36134 l
126403 38861 127671 40763 128185 41840 c
128532 42569 128711 43191 128711 43729 c
128711 44363 128436 44914 127898 45380 c
127360 45847 126355 46122 124884 46217 C
125314 47521 L
139608 47521 L
139261 46217 L
138113 46122 137204 45906 136522 45559 c
135242 44949 133962 44028 132682 42784 c
131414 41553 129393 39053 126642 35285 c
99873 -1088 L
98605 -1088 L
@c
F
T
@rax 452.42306 531.32740 543.75931 553.17146 @E
[0.00028346 0.00000000 0.00000000 0.00028346 446.42294430 536.50741345] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/Symbol 84667.00000 z
%CHAR: 21167 0 (R) @t
38693 26247 m
38693 9920 l
38693 6392 39088 4205 39850 3344 c
40894 2131 42489 1524 44606 1524 c
46751 1524 L
46751 0 L
22733 0 L
22733 1524 L
24850 1524 l
27221 1524 28914 2300 29930 3838 c
30480 4699 30763 6731 30763 9920 c
30763 46144 l
30763 49671 30382 51859 29648 52705 c
28561 53919 26967 54526 24850 54526 c
22733 54526 L
22733 56064 L
43279 56064 l
48994 56064 53326 55372 56304 53989 c
59281 52621 61553 50758 63105 48430 c
64672 46101 65448 43477 65448 40555 c
65448 35983 63924 32258 60890 29394 c
57870 26529 53552 25090 47950 25090 c
45339 25090 42249 25485 38693 26247 C
@c
38693 28603 m
41558 28053 43801 27785 45396 27785 c
48289 27785 50786 28886 52875 31115 c
54977 33331 56022 36195 56022 39723 c
56022 42150 55528 44408 54554 46482 c
53566 48571 52169 50123 50349 51153 c
48529 52197 46482 52705 44196 52705 c
42729 52705 40894 52451 38693 51929 C
38693 28603 L
@c
F
%CHAR: 68256 0 (,) @t
72800 -14097 m
72800 -12277 L
75636 -11345 77837 -9892 79404 -7916 c
80956 -5941 81732 -3866 81732 -1693 c
81732 -1087 81619 -649 81408 -367 c
81182 -99 80900 42 80575 42 c
80406 42 79813 -240 78797 -790 c
78303 -1030 77753 -1157 77146 -1157 c
75848 -1157 74804 -762 73999 42 c
73209 847 72800 1947 72800 3344 c
72800 4699 73322 5856 74352 6816 c
75382 7789 76652 8269 78134 8269 c
79954 8269 81577 7479 82988 5884 c
84413 4304 85119 2201 85119 -409 c
85119 -3246 84131 -5884 82170 -8326 c
80194 -10767 77075 -12686 72800 -14097 C
@c
F
%CHAR: 89423 0 (r) @t
102109 2272 m
102109 -2568 l
102109 -9370 101686 -14605 100839 -18274 C
93769 -18274 L
94348 -16510 94715 -15071 94884 -13970 c
95152 -12093 95293 -9737 95293 -6900 c
95293 19600 l
95293 25301 97085 29972 100670 33613 c
104254 37225 108769 39031 114230 39031 c
120453 39031 125195 36788 128454 32329 c
130952 28857 132208 24934 132208 20546 c
132208 15607 130684 11063 127622 6900 c
123572 1453 118450 -1284 112241 -1284 c
110011 -1284 107979 -945 106173 -282 c
104959 183 103605 1030 102109 2272 C
@c
102109 14760 m
102109 10978 102448 8354 103125 6858 c
103802 5376 105030 4120 106822 3076 c
108614 2046 110660 1524 112946 1524 c
116389 1524 119310 2879 121709 5588 c
124108 8283 125308 11966 125308 16623 c
125308 20123 124574 23368 123092 26360 c
121625 29351 119734 31553 117448 32992 c
115162 34417 112749 35137 110223 35137 c
107048 35137 104776 33909 103393 31468 c
102546 30000 102109 26755 102109 21745 c
102109 14760 l
@c
F
%CHAR: 135891 0 (,) @t
140435 -14097 m
140435 -12277 L
143271 -11345 145472 -9892 147039 -7916 c
148591 -5941 149367 -3866 149367 -1693 c
149367 -1087 149254 -649 149043 -367 c
148817 -99 148535 42 148210 42 c
148041 42 147448 -240 146432 -790 c
145938 -1030 145388 -1157 144781 -1157 c
143483 -1157 142439 -762 141634 42 c
140844 847 140435 1947 140435 3344 c
140435 4699 140957 5856 141987 6816 c
143017 7789 144287 8269 145769 8269 c
147589 8269 149212 7479 150623 5884 c
152048 4304 152754 2201 152754 -409 c
152754 -3246 151766 -5884 149805 -8326 c
147829 -10767 144710 -12686 140435 -14097 C
@c
F
%CHAR: 157058 0 (E) @t
174626 53002 m
174626 30847 L
186988 30847 l
190163 30847 192279 31327 193352 32286 c
194791 33556 195581 35786 195751 38989 C
197289 38989 L
197289 19473 L
195751 19473 L
195370 22197 194989 23947 194594 24723 c
194100 25682 193281 26444 192152 26995 c
191024 27545 189274 27827 186903 27827 c
174626 27827 L
174626 9342 l
174626 6858 174739 5348 174965 4812 c
175177 4276 175572 3852 176122 3528 c
176673 3217 177717 3062 179255 3062 c
188766 3062 l
191941 3062 194241 3274 195666 3725 c
197105 4163 198488 5024 199801 6322 c
201508 8029 203258 10612 205050 14055 C
206715 14055 L
201917 0 L
158667 0 L
158667 1524 L
160656 1524 l
162971 1524 164650 2201 165694 3556 c
166357 4417 166696 6519 166696 9878 c
166696 46299 l
166696 49855 166329 52042 165609 52875 c
164622 53975 162971 54526 160656 54526 c
158667 54526 L
158667 56064 L
201790 56064 L
202496 43787 L
200873 43787 L
200295 46736 199660 48754 198954 49855 c
198248 50955 197218 51802 195835 52381 c
194735 52790 192787 53002 190008 53002 c
174626 53002 L
@c
F
%CHAR: 208775 0 (,) @t
213319 -14097 m
213319 -12277 L
216155 -11345 218356 -9892 219923 -7916 c
221475 -5941 222251 -3866 222251 -1693 c
222251 -1087 222138 -649 221927 -367 c
221701 -99 221419 42 221094 42 c
220925 42 220332 -240 219316 -790 c
218822 -1030 218272 -1157 217665 -1157 c
216367 -1157 215323 -762 214518 42 c
213728 847 213319 1947 213319 3344 c
213319 4699 213841 5856 214871 6816 c
215901 7789 217171 8269 218653 8269 c
220473 8269 222096 7479 223507 5884 c
224932 4304 225638 2201 225638 -409 c
225638 -3246 224650 -5884 222689 -8326 c
220713 -10767 217594 -12686 213319 -14097 C
@c
F
%CHAR: 229942 0 (T) @t
278809 56064 m
279430 42912 L
277864 42912 L
277553 45226 277144 46877 276622 47879 c
275761 49474 274632 50645 273207 51407 c
271782 52169 269919 52550 267605 52550 c
259702 52550 L
259702 9708 l
259702 6265 260083 4120 260817 3260 c
261876 2103 263484 1524 265657 1524 c
267605 1524 L
267605 0 L
243827 0 L
243827 1524 L
245817 1524 l
248188 1524 249867 2244 250855 3683 c
251462 4558 251772 6576 251772 9708 c
251772 52550 L
245027 52550 l
242416 52550 240554 52352 239453 51971 c
238014 51449 236786 50433 235770 48952 c
234754 47456 234147 45452 233950 42912 C
232383 42912 L
233046 56064 L
278809 56064 L
@c
F
%CHAR: 281659 0 (,) @t
286203 -14097 m
286203 -12277 L
289039 -11345 291240 -9892 292807 -7916 c
294359 -5941 295135 -3866 295135 -1693 c
295135 -1087 295022 -649 294811 -367 c
294585 -99 294303 42 293978 42 c
293809 42 293216 -240 292200 -790 c
291706 -1030 291156 -1157 290549 -1157 c
289251 -1157 288207 -762 287402 42 c
286612 847 286203 1947 286203 3344 c
286203 4699 286725 5856 287755 6816 c
288785 7789 290055 8269 291537 8269 c
293357 8269 294980 7479 296391 5884 c
297816 4304 298522 2201 298522 -409 c
298522 -3246 297534 -5884 295573 -8326 c
293597 -10767 290478 -12686 286203 -14097 C
@c
F
%CHAR: 302826 0 (q) @t
306509 27079 m
306509 37931 308710 46299 313113 52169 c
316457 56586 320451 58787 325108 58787 c
329623 58787 333490 56670 336679 52423 c
341152 46496 343381 38439 343381 28236 c
343381 18528 341194 10880 336806 5249 c
333391 889 329369 -1284 324741 -1284 c
322229 -1284 319943 -677 317869 536 c
315808 1750 313974 3500 312379 5786 c
310771 8072 309557 10499 308696 13067 c
307229 17470 306509 22140 306509 27079 c
@c
335409 30014 m
335380 37211 334689 42983 333334 47343 c
332290 50673 330893 53058 329157 54483 c
327887 55542 326434 56064 324783 56064 c
322906 56064 321185 55330 319604 53862 c
318038 52409 316852 49968 316034 46553 c
315216 43138 314679 37620 314397 30014 C
335409 30014 L
@c
314397 27291 m
314510 22380 314877 17964 315512 14055 c
315992 11077 316796 8495 317953 6279 c
318645 4967 319647 3838 320973 2921 c
322299 1990 323711 1524 325235 1524 c
326998 1524 328678 2357 330258 4008 c
331839 5659 333038 8326 333856 11994 c
334661 15649 335155 20758 335324 27291 C
314397 27291 L
@c
F
T
@rax 452.49449 489.27572 470.21471 510.73569 @E
[0.00028346 0.00000000 0.00000000 0.00028346 452.49447164 494.07163547] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/Symbol 84667.00000 z
%CHAR: 0 0 (q) @t
3683 27079 m
3683 37931 5884 46299 10287 52169 c
13631 56586 17625 58787 22282 58787 c
26797 58787 30664 56670 33853 52423 c
38326 46496 40555 38439 40555 28236 c
40555 18528 38368 10880 33980 5249 c
30565 889 26543 -1284 21915 -1284 c
19403 -1284 17117 -677 15043 536 c
12982 1750 11148 3500 9553 5786 c
7945 8072 6731 10499 5870 13067 c
4403 17470 3683 22140 3683 27079 c
@c
32583 30014 m
32554 37211 31863 42983 30508 47343 c
29464 50673 28067 53058 26331 54483 c
25061 55542 23608 56064 21957 56064 c
20080 56064 18359 55330 16778 53862 c
15212 52409 14026 49968 13208 46553 c
12390 43138 11853 37620 11571 30014 C
32583 30014 L
@c
11571 27291 m
11684 22380 12051 17964 12686 14055 c
13166 11077 13970 8495 15127 6279 c
15819 4967 16821 3838 18147 2921 c
19473 1990 20885 1524 22409 1524 c
24172 1524 25852 2357 27432 4008 c
29013 5659 30212 8326 31030 11994 c
31835 15649 32329 20758 32498 27291 C
11571 27291 L
@c
F
T
@rax 452.49449 489.27572 470.21471 510.73569 @E
[0.00028346 0.00000000 0.00000000 0.00028346 452.49447164 494.07163547] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 452.49449 489.27572 470.21471 510.73569 @E
[0.00028346 0.00000000 0.00000000 0.00028346 452.49447164 494.07163547] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 42333.00000 z
%CHAR: 44112 -16933 (f) @t
52833 515 m
52833 -11931 l
52833 -13695 53030 -14809 53411 -15282 c
53926 -15889 54604 -16192 55457 -16192 c
57179 -16192 L
57179 -16933 L
45869 -16933 L
45869 -16192 L
46715 -16192 l
47266 -16192 47774 -16051 48225 -15776 c
48677 -15501 48994 -15127 49164 -14661 c
49340 -14188 49425 -13278 49425 -11931 c
49425 515 L
45742 515 L
45742 2004 L
49425 2004 L
49425 3239 l
49425 5130 49728 6731 50335 8036 c
50942 9349 51866 10407 53115 11211 c
54364 12016 55761 12418 57320 12418 c
58766 12418 60100 11952 61313 11014 c
62111 10393 62506 9694 62506 8925 c
62506 8509 62329 8121 61969 7761 c
61610 7394 61229 7211 60812 7211 c
60495 7211 60163 7324 59810 7550 c
59458 7775 59027 8269 58519 9017 c
58011 9772 57539 10273 57115 10541 c
56685 10802 56212 10929 55690 10929 c
55055 10929 54519 10760 54074 10421 c
53637 10090 53319 9560 53122 8855 c
52931 8142 52833 6315 52833 3366 c
52833 2004 L
57715 2004 L
57715 515 L
52833 515 L
@c
F
T
@rax 452.49449 489.27572 470.21471 510.73569 @E
[0.00028346 0.00000000 0.00000000 0.00028346 452.49447164 494.07163547] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF


