#    Copyright (C) 2006 Imperial College London and others.
#
#    Please see the AUTHORS file in the main source directory for a full list
#    of copyright holders.
#
#    Prof. C Pain
#    Applied Modelling and Computation Group
#    Department of Earth Science and Engineering
#    Imperial College London
#
#    amcgsoftware@imperial.ac.uk
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation,
#    version 2.1 of the License.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#    USA
SHELL = @SHELL@
PACKAGE_NAME = fluidity

FLUIDITY = $(PACKAGE_NAME)
FC      = @FC@
FCFLAGS = -I../include @CPPFLAGS@ @FCFLAGS@ -I/usr/local/include -I./

MPIF90  = @MPIF90@

CC      = @CC@
CFLAGS  = @CPPFLAGS@ @CFLAGS@ -I../include -I/usr/local/include

CXX     = @CXX@
CXXFLAGS= @CPPFLAGS@ @CXXFLAGS@ -I../include -I/usr/local/include

MAKE    = @MAKE@
AR  = @AR@
ARFLAGS = @ARFLAGS@

LIB = ../lib/lib$(FLUIDITY).a

VPATH = ./:./src

OBJS = Extract_From_State.o Copy_Into_State.o multi_matrix_operations.o Multi_MakeCVTetrahedra.o \
multi_shape_fct_ND.o multi_shape_fct.o multi_sparsity.o multi_eos.o cv-adv-dif.o multi_solvers.o \
multi_compositional.o multi_dyncore_dg.o Multiphase_TimeLoop.o \
Multiphase_Prototype_Wrapper.o multi_IO.o multi_fracture.o multi_caching.o multi_rheology.o

.SUFFIXES: .f90 .F90 .c .cpp .o .a

.f90.o:
	@echo "        FC $<"
	$(FC) $(FCFLAGS) -c $<
.F90.o:
	@echo "        FC $<"
	$(FC) $(FCFLAGS) -c $<
.c.o:
	@echo "        CC $<"
	$(CC) $(CFLAGS) -c $<
.cpp.o:
	@echo "        CXX $<"
	$(CXX) $(CXXFLAGS) -c $<

$(LIB): $(OBJS) main.o
	@mkdir -p ../lib
	@$(AR) $(ARFLAGS) $(LIB) $(OBJS)
default: $(LIB)

# cancel implicit rule that tries to make .o from .mod with m2c:
%.o: %.mod

multi_eos.o: Extract_From_State.o multi_matrix_operations.o multi_rheology.o
cv-adv-dif.o: Extract_From_State.o multi_solvers.o multi_shape_fct.o multi_shape_fct_ND.o \
multi_matrix_operations.o multi_IO.o
multi_dyncore_dg.o: Extract_From_State.o multi_matrix_operations.o multi_shape_fct.o multi_solvers.o cv-adv-dif.o multi_IO.o
multi_IO.o: 
multi_solvers.o: Extract_From_State.o multi_shape_fct.o multi_shape_fct_ND.o multi_matrix_operations.o
multi_sparsity.o: Extract_From_State.o multi_shape_fct.o multi_shape_fct_ND.o cv-adv-dif.o
multi_shape_fct.o: Extract_From_State.o multi_shape_fct_ND.o
multi_shape_fct_ND.o: multi_caching.o Multi_MakeCVTetrahedra.o
Multiphase_TimeLoop.o: multi_caching.o multi_dyncore_dg.o multi_eos.o multi_IO.o Copy_Into_State.o Extract_From_State.o \
multi_sparsity.o multi_compositional.o multi_shape_fct_ND.o multi_fracture.o 
Multiphase_Prototype_Wrapper.o: multi_rheology.o Multiphase_TimeLoop.o
multi_matrix_operations.o: multi_caching.o

clean:
	@rm -f *.o *.d *.mod $(PROG_EXEC)
	@cd tests; make clean
