# directory locations:
BIN=../../bin/
SCRIPTS=../../bin/

preprocess:
	@if [ "x" == "x${NPROCS}" ]; then echo "**********ERROR: Please define NPROCS to set the number of processors with"; echo "make preprocess NPROCS=N, where N is the number of processors."; echo "Similarly use make run NPROCS=N."; echo "This is a large simulation and will take a very long time in serial."; echo "It is best run in parallel on 8 processors."; false; fi
	@echo **********Converting the gmsh mesh to triangle format:
	$(SCRIPTS)gmsh2triangle unit_sphere.msh
ifneq ($(NPROCS),8)
	@echo **********WARNING: This simulation is best run on 8 processors
endif
ifeq ($(NPROCS),1)
	@echo **********Serial run: not decomposing mesh
	@echo **********WARNING: This is a large simulation and will take a very long time in serial. Find a handy supercomputer.
else
# exit if no fltools and print warning
	@if [ ! -e $(BIN)fldecomp ] ; then echo "ERROR: You must build Fluidity parallel tools, using the command 'make fltools' in the Fluidity directory, prior to running this test in parallel."; false; fi
	@echo **********Decomposing the mesh into $(NPROCS) parts for parallel run:
	$(BIN)fldecomp -n $(NPROCS) -f unit_sphere
endif


run:
ifneq ($(NPROCS),8)
	@echo **********WARNING: This simulation is best run on 8 processors
endif
ifeq ($(NPROCS),1)
	@echo **********WARNING: This is a large simulation and will take a very long time in serial. Find a handy supercomputer.
	@echo **********Calling fluidity in serial with verbose log output enabled:
	$(BIN)fluidity -v2 -l flow_past_sphere_Re1000.flml
else
	@echo **********Calling fluidity in parallel with verbose log output enabled:
	mpiexec -n $(NPROCS) $(BIN)fluidity -v2 -l flow_past_sphere_Re1000.flml
endif

postprocess:
	@echo **********Calling the data extraction and plotting script
	python ./plot_data.py

input: clean
	$(MAKE) preprocess NPROCS=8

clean:
	@echo **********Cleaning the output from previous fluidity runs:
	rm -f *.ele *.edge *.face *.node *.halo *.poly *vtu *.stat *.log-* *.err-* matrixdump* 
	rm -rf flow_past_sphere_Re1000_? flow_past_sphere_Re1000_?? 
	rm -f Sphere_drag.pdf
