<?xml version='1.0' encoding='utf-8'?>
<testproblem>
   <name>backward facing step 3D example</name>
   <!--Runs a 3D backward facing step problem with geometry defined as in Le, Moin &amp; Kim 1997. Direct numerical simulation of turbulent flow over a backward-facing step, Journal of Fluid Mechanics.-->
  <owner userid="jbull"/>
  <tags>flml 3dadapt</tags>
  <!-- uses flml - uses 3d adaptivity -->
  <problem_definition length="long" nprocs="8">
    <command_line>mpiexec fluidity -v2 -l backward_facing_step_3d.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="finishtime" language="python">from fluidity_tools import stat_parser as stat
finishtime= stat("backward_facing_step_3d.stat")["ElapsedTime"]["value"][-1]</variable>
    <variable name="reattachment_length" language="python">
from postprocessor_3d import reatt_length, get_filelist
import numpy
yarray = numpy.array([0.1, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 3.9])
filelist = get_filelist(sample=1, start=0)
reattachment_length = numpy.array(reatt_length(filelist, yarray))
    </variable>
  </variables>
  <pass_tests>
    <test name="finish_time" language="python">assert finishtime &gt; 50.0</test>
    <test name="Reattachment length does not change by more than 10%" language="python">
        print ( ( max(reattachment_length[:,0]) - min(reattachment_length[:,0]) ) / min(reattachment_length[:,0]) )
assert( ( max(reattachment_length[:,0]) - min(reattachment_length[:,0]) ) / min(reattachment_length[:,0]) &lt; 0.1)
    </test>
  </pass_tests>
  <warn_tests/>
</testproblem>
