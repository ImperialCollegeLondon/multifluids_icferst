<?xml version="1.0" encoding="utf-8" ?>
<testproblem>
  <name>parallel-p1p1-Stokes-square-convection-1e4</name>
  <owner userid="rhodrid"/>

  <tags>flml parallel</tags>

  <problem_definition length="medium" nprocs="1">
    <command_line>mpiexec -n 2 ../../bin/flredecomp -i 1 -o 2 -v -l Stokes-square-convection-1e4-p1p1-parallel Stokes-square-convection-1e4-p1p1-parallel_flredecomp &amp;&amp;
mpiexec -np 2 ../../bin/fluidity -v2 -l Stokes-square-convection-1e4-p1p1-parallel_flredecomp.flml</command_line>
  </problem_definition>

<variables>  

<variable name="nu_top" language="python">
from fluidity_tools import stat_parser as stat
nu_top = abs(stat("stokes-1e4-p1p1-parallel.stat")["Fluid"]["Temperature"]["surface_integral%TopH"][-1])
</variable>

<variable name="max_div" language="python">
from fluidity_tools import stat_parser as stat
max_div = max(max(abs(stat("stokes-1e4-p1p1-parallel.stat")["Fluid"]["FiniteElementDivergence"]["max"])), max(abs(stat("stokes-1e4-p1p1-parallel.stat")["Fluid"]["FiniteElementDivergence"]["min"])))
</variable>

<variable name="rms_vel" language="python">
from fluidity_tools import stat_parser as stat
rms_vel= stat("stokes-1e4-p1p1-parallel.stat")["Fluid"]["Velocity%magnitude"]["l2norm"][-1]
</variable>

</variables>

<pass_tests>

<test name="Surface Nusselt Number Validity: 4.7 .lt. Nu .lt. 5.3" language="python">
assert(abs(nu_top-5.0) &lt; 0.30)
</test>

<test name="RMS Velocity Validity: 43.0 .lt. V_RMS .lt. 46.0" language="python">
assert(abs(rms_vel-44.5) &lt; 1.5)
</test>

<test name="Divergence small .lt. 130" language="python">
assert(max_div &lt; 130)
</test>

</pass_tests>                                                                                                                                                                                                

<warn_tests>
</warn_tests>

</testproblem>





