from math import sin, cos, tanh, pi, sqrt

def u(X):
    return sin(X[0]**2 + X[1]**2) + 0.500

def v(X):
    return 0.100*cos(X[0]**2 + X[1]**2) + 0.0500

def p(X):
    return (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(1.60*X[0]**2 + 0.400)

def rho(X):
    return 0.500*sin(X[0]**2 + X[1]**2) + 0.750

def ie(X):
    return 4.00*X[0]**2 + 1.00

def forcing_u(X):
    return 2*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*cos(X[0]**2 + X[1]**2) + 2*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*cos(X[0]**2 + X[1]**2) + (1.60*X[0]**2 + 0.400)*X[0]*cos(X[0]**2 + X[1]**2) + 2.80*X[0]**2*sin(X[0]**2 + X[1]**2) + 2.80*X[1]**2*sin(X[0]**2 + X[1]**2) + 3.20*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[0] - 2.80*cos(X[0]**2 + X[1]**2)

def forcing_v(X):
    return -0.200*(0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*sin(X[0]**2 + X[1]**2) - 0.200*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*sin(X[0]**2 + X[1]**2) + (1.60*X[0]**2 + 0.400)*X[1]*cos(X[0]**2 + X[1]**2) + 0.280*X[0]**2*cos(X[0]**2 + X[1]**2) + 0.280*X[1]**2*cos(X[0]**2 + X[1]**2) + 0.280*sin(X[0]**2 + X[1]**2)

def forcing_rho(X):
    return (0.100*cos(X[0]**2 + X[1]**2) + 0.0500)*X[1]*cos(X[0]**2 + X[1]**2) + 2*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[0]*cos(X[0]**2 + X[1]**2) - 0.200*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*X[1]*sin(X[0]**2 + X[1]**2) + (sin(X[0]**2 + X[1]**2) + 0.500)*X[0]*cos(X[0]**2 + X[1]**2)

def forcing_ie(X):
    return 8.00*(0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(sin(X[0]**2 + X[1]**2) + 0.500)*X[0] + (0.500*sin(X[0]**2 + X[1]**2) + 0.750)*(1.60*X[0]**2 + 0.400)*(2*X[0]*cos(X[0]**2 + X[1]**2) - 0.200*X[1]*sin(X[0]**2 + X[1]**2))

def velocity(X):
   return [u(X), v(X)]

def forcing_velocity(X):
   return [forcing_u(X), forcing_v(X)]

