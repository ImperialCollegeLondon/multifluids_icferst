<?xml version="1.0" encoding="utf-8" ?>
<testproblem>
  <name>p2p1-Stokes-square-convection-1e4</name>
  <owner userid="rhodrid"/>
  <tags>flml</tags>

  <problem_definition length="medium" nprocs="1">
    <command_line>fluidity -v2 -l Stokes-square-convection-1e4-p2p1.flml</command_line>
  </problem_definition>

<variables>  

<variable name="solvers_converged" language="python">
import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files
</variable>

<variable name="velocity_solver_iterations_correct" language="python">
from check_iterations import *
velocity_solver_iterations_correct = check_velocity_iterations()
</variable>

<variable name="nu_top" language="python">
from fluidity_tools import stat_parser as stat
nu_top = abs(stat("stokes-1e4-p2p1.stat")["Fluid"]["Temperature"]["surface_integral%TopH"][-1])
</variable>

<variable name="max_div" language="python">
from fluidity_tools import stat_parser as stat
max_div = max(max(abs(stat("stokes-1e4-p2p1.stat")["Fluid"]["FiniteElementDivergence"]["max"])), max(abs(stat("stokes-1e4-p2p1.stat")["Fluid"]["FiniteElementDivergence"]["min"])))
</variable>

<variable name="rms_vel" language="python">
from fluidity_tools import stat_parser as stat
rms_vel= stat("stokes-1e4-p2p1.stat")["Fluid"]["Velocity%magnitude"]["l2norm"][-1]
</variable>

<variable name="q_one" language="python">
from fluidity_tools import stat_parser as stat
q_one = (-1.)*(stat("stokes-1e4-p2p1.detectors")["Fluid"]["TemperatureGradient"]["TopLeftCorner"][1,:][-1])
</variable>

<variable name="q_two" language="python">
from fluidity_tools import stat_parser as stat
q_two = (-1.)*(stat("stokes-1e4-p2p1.detectors")["Fluid"]["TemperatureGradient"]["TopRightCorner"][1,:][-1])
</variable>

</variables>

<pass_tests>

<test name="Solvers converged" language="python">
assert(solvers_converged)
</test>

<test name="Velocity solver behaving as expected" language="python">
assert(velocity_solver_iterations_correct)
</test>

<test name="Surface Nusselt Number Validity: 4.8 .lt. Nu .lt. 5.0" language="python">
assert(abs(nu_top-4.9) &lt; 0.10)
</test>

<test name="RMS Velocity Validity: 42.0 .lt. V_RMS .lt. 44.0" language="python">
assert(abs(rms_vel-43.0) &lt; 1.0)
</test>

<test name="Divergence small .lt. 1.0E-5" language="python">
assert(max_div &lt; 1.0E-5)
</test>

<test name="Nondimensional Temp Gradient at TopLeftCorner Validity: 8.00 .lt. q_one .lt. 8.10" language="python">
assert(abs(q_two-8.05) &lt; 0.05)
</test>

<test name="Nondimensional Temp Gradient at TopRightCorner Validity: 0.57 .lt. q_one .lt. 0.60" language="python">
assert(abs(q_one-0.585) &lt; 0.015)
</test>
</pass_tests>                                                                                                                                                                                                

<warn_tests>
</warn_tests>

</testproblem>





