<?xml version='1.0' encoding='utf-8'?>
<shallow_water_options>
  <simulation_name>
    <string_value lines="1">balanced</string_value>
  </simulation_name>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="square">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="DoublyPeriodicMesh"/>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="DoublyPeriodicMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="DoublyPeriodicMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <periodic_boundary_conditions name="XPeriodic">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">2</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(x, t):
	return [x[0]-5.0e5, x[1]]</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <periodic_boundary_conditions name="YPeriodic">
          <physical_boundary_ids>
            <integer_value shape="1" rank="1">4</integer_value>
          </physical_boundary_ids>
          <aliased_boundary_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </aliased_boundary_ids>
          <coordinate_map>
            <string_value lines="20" type="python">def val(x, t):
	return [x[0], x[1]-5.0e5]</string_value>
          </coordinate_map>
        </periodic_boundary_conditions>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="Adapt1">
      <from_file file_name="square-x2">
        <format name="triangle"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
      <exclude_from_mesh_adaptivity/>
    </mesh>
    <mesh name="Adapt2">
      <from_file file_name="square-y2">
        <format name="triangle"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
      <exclude_from_mesh_adaptivity/>
    </mesh>
    <mesh name="OutputMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="InitialMesh">
      <from_file file_name="square">
        <format name="triangle"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_file>
      <exclude_from_mesh_adaptivity/>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="OutputMesh"/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">100</real_value>
    </timestep>
    <nonlinear_iterations>
      <integer_value rank="0">1</integer_value>
    </nonlinear_iterations>
    <finish_time>
      <real_value rank="0">1000000</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">100</integer_value>
    </final_timestep>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">10</real_value>
      </magnitude>
    </gravity>
    <coriolis>
      <f_plane>
        <f>
          <real_value rank="0">0.00010313</real_value>
        </f>
      </f_plane>
    </coriolis>
  </physical_parameters>
  <material_phase name="Fluid">
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="ShallowWater"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <advection_scheme>
              <none/>
            </advection_scheme>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1e-16</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1e-16</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <balanced/>
        </initial_condition>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <geostrophic_interpolation>
          <coriolis>
            <velocity_to_coriolis/>
            <coriolis_to_velocity/>
          </coriolis>
          <conservative_potential>
            <mesh name="PressureMesh"/>
            <spatial_discretisation>
              <mass/>
              <continuous_galerkin>
                <integrate_divergence_by_parts/>
              </continuous_galerkin>
            </spatial_discretisation>
            <solver>
              <iterative_method name="cg"/>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-16</real_value>
              </relative_error>
              <absolute_error>
                <real_value rank="0">1e-16</real_value>
              </absolute_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <remove_null_space/>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <galerkin_projection>
              <honour_strong_boundary_conditions/>
              <continuous>
                <solver>
                  <iterative_method name="cg"/>
                  <preconditioner name="sor"/>
                  <relative_error>
                    <real_value rank="0">1e-16</real_value>
                  </relative_error>
                  <absolute_error>
                    <real_value rank="0">1e-16</real_value>
                  </absolute_error>
                  <max_iterations>
                    <integer_value rank="0">1000</integer_value>
                  </max_iterations>
                  <never_ignore_solver_failures/>
                  <diagnostics>
                    <monitors/>
                  </diagnostics>
                </solver>
              </continuous>
            </galerkin_projection>
            <project_pressure name="LayerThickness">
              <scale_factor>
                <real_value rank="0">10</real_value>
              </scale_factor>
            </project_pressure>
          </conservative_potential>
          <residual>
            <galerkin_projection>
              <discontinuous/>
            </galerkin_projection>
          </residual>
          <debug>
            <write_debug_vtus/>
          </debug>
        </geostrophic_interpolation>
      </prognostic>
    </vector_field>
    <scalar_field name="LayerThickness" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.5</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1e-16</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1e-16</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="python">def val(X,t):
   #import math
   #r0 = 2.5e5
   #x = r0 - abs(X[0])
   #x /= r0
   #y = r0 - abs(X[1])
   #y /= r0
   #return 0.05 * math.pow(x, 3.0) * math.pow(y, 3.0)

   from math import exp
   LR = 40000.
   u = [0.0,0.0]
   r0 = 250000.
   r = ((X[0])**2 + (X[1]**2))**0.5
   return 0.05*exp(-r/LR)
   if(r&lt;-1.0e-5+r0):
      return 0.05*exp(-r/LR)
   else:
      return 0.</string_value>
          </python>
        </initial_condition>
        <mean_layer_thickness>
          <real_value rank="0">5</real_value>
        </mean_layer_thickness>
        <output/>
        <stat/>
        <galerkin_projection>
          <continuous>
            <solver>
              <iterative_method name="cg"/>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1e-16</real_value>
              </relative_error>
              <absolute_error>
                <real_value rank="0">1e-16</real_value>
              </absolute_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
          </continuous>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
  </material_phase>
  <mesh_adaptivity>
    <prescribed_adaptivity>
      <adapt_interval>
        <python>
          <string_value lines="20" type="python">def val(t):
	if "timestep_count" in persistent:
		persistent["timestep_count"] += 1
	else:
		persistent["timestep_count"] = 1
	return persistent["timestep_count"] %5 == 0</string_value>
        </python>
      </adapt_interval>
      <mesh>
        <name>
          <python>
            <string_value lines="20" type="python">def val(t):
	meshes = ["Adapt1", "Adapt2"]
	if "mesh_count" in persistent:
		persistent["mesh_count"] +=1 
		persistent["mesh_count"] %= 2
	else:
		persistent["mesh_count"] = 1
	return meshes[persistent["mesh_count"]]</string_value>
          </python>
        </name>
      </mesh>
    </prescribed_adaptivity>
  </mesh_adaptivity>
  <debug/>
</shallow_water_options>
