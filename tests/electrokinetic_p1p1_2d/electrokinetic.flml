<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">electrokinetic</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="electrokinetic">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="DGP0">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">0</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">2</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">1</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="PressureMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">2.2</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">10.0</real_value>
      <comment>0.01</comment>
    </finish_time>
  </timestepping>
  <material_phase name="water">
    <equation_of_state>
      <fluids>
        <linear>
          <reference_density>
            <real_value rank="0">1.0</real_value>
          </reference_density>
        </linear>
      </fluids>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">only first timestep</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="mg"/>
          <relative_error>
            <real_value rank="0">1.E-50</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1.0e-12</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">350</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <print_norms/>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <mass_terms>
              <lump_mass_matrix/>
              <exclude_mass_terms/>
            </mass_terms>
            <advection_terms>
              <exclude_advection_terms/>
            </advection_terms>
            <stress_terms>
              <tensor_form/>
            </stress_terms>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">1.0</real_value>
          </relaxation>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.E-10</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">500</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value shape="2" dim1="dim" rank="1">0.0 1.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="no_flow_out_sides">
          <surface_ids>
            <integer_value shape="2" rank="1">2 4</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="flow_in_at_bottom">
          <surface_ids>
            <integer_value shape="1" rank="1">1</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">1.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <vector_field name="Absorption" rank="1">
          <diagnostic>
            <mesh name="DGP0"/>
            <algorithm name="vector_python_diagnostic" material_phase_support="multiple">
              <string_value lines="20" type="python"># get the prescribed fields 
perm = states["water"].scalar_fields["Permeability"]
visc = states["water"].scalar_fields["Viscosity"]

# loop the DMmesh_p0 nodes (which are element centred)
for n in range(field.node_count):
   perm_n = perm.node_val(n)
   visc_n = visc.node_val(n)
   
   # calc the absorption term
   sigma_n = visc_n/perm_n
   
   # set the absorption term
   field.set(n,sigma_n)</string_value>
            </algorithm>
            <output>
              <exclude_from_vtu/>
            </output>
            <stat>
              <exclude_from_stat/>
            </stat>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
          <include_pressure_correction/>
        </vector_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </vector_field>
    <scalar_field name="ElectricalPotential" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <equation name="ElectricalPotential"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <streamline_upwind_petrov_galerkin>
                <nu_bar_optimal/>
                <nu_scale name="unity">
                  <real_value shape="1" rank="0">1.0</real_value>
                </nu_scale>
              </streamline_upwind_petrov_galerkin>
            </stabilisation>
            <advection_terms/>
            <mass_terms/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">1.0</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0e-50</real_value>
          </relative_error>
          <absolute_error>
            <real_value rank="0">1.0e-6</real_value>
          </absolute_error>
          <max_iterations>
            <integer_value rank="0">400</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <constant>
            <real_value rank="0">0.0</real_value>
          </constant>
        </initial_condition>
        <boundary_conditions name="Zero_potential_at_outlet">
          <surface_ids>
            <integer_value shape="1" rank="1">3</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <tensor_field name="Diffusivity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <scalar_field name="Source" rank="0">
          <diagnostic>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <output/>
            <stat/>
            <detectors>
              <include_in_detectors/>
            </detectors>
          </diagnostic>
        </scalar_field>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Viscosity" rank="0">
      <prescribed>
        <mesh name="DGP0"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">0.001</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <electrical_properties>
      <conductivity>
        <real_value rank="0">0.8410792485</real_value>
      </conductivity>
      <coupling_coefficients>
        <scalar_field name="Electrokinetic" rank="0">
          <diagnostic>
            <mesh name="VelocityMesh"/>
            <algorithm name="scalar_python_diagnostic" material_phase_support="single">
              <string_value lines="20" type="python">from math import log10
x = log10(0.8410792485)
c = (-8.0613,-0.807,0.107,-0.0996,-0.1064)
for i in range(field.mesh.node_count):
  field.val[i] = (-1)*10.0**(c[4]*x**4.0 + c[3]*x**3.0 + c[2]*x**2.0 + c[1]*x + c[0])</string_value>
              <comment>Electrokinetic coupling coefficient based on linear fit with salinity from empirical data.  See Saunders et al. (2008) Geophysics, *73*, E165--E180.</comment>
            </algorithm>
            <output/>
            <stat/>
            <detectors>
              <include_in_detectors/>
            </detectors>
          </diagnostic>
        </scalar_field>
      </coupling_coefficients>
    </electrical_properties>
  </material_phase>
  <porous_media>
    <scalar_field name="Porosity">
      <prescribed>
        <mesh name="DGP0"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">0.2</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <scalar_field name="Permeability">
      <prescribed>
        <mesh name="DGP0"/>
        <value name="WholeMesh">
          <constant>
            <real_value rank="0">1.0e-12</real_value>
          </constant>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </scalar_field>
    <scalar_field name="ElectricalConductivity">
      <diagnostic>
        <mesh name="VelocityMesh"/>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <output/>
        <stat/>
        <detectors>
          <include_in_detectors/>
        </detectors>
      </diagnostic>
    </scalar_field>
  </porous_media>
</fluidity_options>
