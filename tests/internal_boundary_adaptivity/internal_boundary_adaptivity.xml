<?xml version='1.0' encoding='utf-8'?>
<testproblem>
  <name>interal_boundary_adaptivity<comment>Tests: internal boundaries+adaptivity+checkpointing</comment></name>
  <owner userid="skramer"/>
  <problem_definition length="medium" nprocs="1">
    <command_line>fluidity -v2 -l internal_boundary.flml &amp;&amp;
spud-set ib_1_checkpoint.flml /timestepping/finish_time 0.999999 &amp;&amp;
fluidity -v2 -l ib_1_checkpoint.flml</command_line>
  </problem_definition>
  <variables>
    <variable name="solvers_converged" language="python">import os
files = os.listdir("./")
solvers_converged = not "matrixdump" in files and not "matrixdump.info" in files</variable>
    <variable name="stats" language="python">from fluidity_tools import stat_parser
s=stat_parser("ib.stat")
stats={}
stats["nodes_begin"]=s["CoordinateMesh"]["nodes"][0]
stats["nodes_end"]=s["CoordinateMesh"]["nodes"][-1]
stats["asbmin"]=s["Fluid"]["AnalyticalSolutionBottom"]["min"][-1]
stats["asbmax"]=s["Fluid"]["AnalyticalSolutionBottom"]["max"][-1]
stats["vell2_begin"]=s["Fluid"]["Velocity%magnitude"]["l2norm"][0]
stats["vell2_end"]=s["Fluid"]["Velocity%magnitude"]["l2norm"][-1]
stats["scalarl2_begin"]=s["Fluid"]["Scalar"]["l2norm"][0]
stats["scalarl2_end"]=s["Fluid"]["Scalar"]["l2norm"][-1]</variable>
    <variable name="stats_after_checkpoint" language="python">from fluidity_tools import stat_parser
s=stat_parser("ib_checkpoint.stat")
stats_after_checkpoint={}
stats_after_checkpoint["nodes_begin"]=s["CoordinateMesh"]["nodes"][0]
stats_after_checkpoint["nodes_end"]=s["CoordinateMesh"]["nodes"][-1]
stats_after_checkpoint["asbmin"]=s["Fluid"]["AnalyticalSolutionBottom"]["min"][-1]
stats_after_checkpoint["asbmax"]=s["Fluid"]["AnalyticalSolutionBottom"]["max"][-1]
stats_after_checkpoint["vell2_begin"]=s["Fluid"]["Velocity%magnitude"]["l2norm"][0]
stats_after_checkpoint["vell2_end"]=s["Fluid"]["Velocity%magnitude"]["l2norm"][-1]
stats_after_checkpoint["scalarl2_begin"]=s["Fluid"]["Scalar"]["l2norm"][0]
stats_after_checkpoint["scalarl2_end"]=s["Fluid"]["Scalar"]["l2norm"][-1]
stats_after_checkpoint["error"]=s["Fluid"]["Error"]["l2norm"][-1]</variable>
  </variables>
  <pass_tests>
    <test name="Solvers converged" language="python">assert(solvers_converged)</test>
    <test name="NodesDecreaseInAdapt" language="python">assert stats['nodes_begin']&gt;stats['nodes_end']</test>
    <test name="ScalarL2Increased" language="python">assert stats['scalarl2_begin']&lt;stats['scalarl2_end']</test>
    <test name="VelocityL2Increased" language="python">assert stats['vell2_begin']&lt;stats['vell2_end']</test>
    <test name="NodesDecreaseInAdapt" language="python">assert stats['nodes_begin']&gt;stats['nodes_end']</test>
    <test name="MeshMovementMax" language="python">assert abs(stats['asbmax']-2.06)&lt;1e-3</test>
    <test name="SameNumberOfNodes" language="python">assert stats["nodes_end"]==stats_after_checkpoint["nodes_begin"]</test>
    <test name="NearlySameScalarL2" language="python">assert abs(stats["scalarl2_end"]-stats_after_checkpoint["scalarl2_begin"])&lt;0.03</test>
    <test name="CloseVelocityL2" language="python">assert abs(stats["vell2_end"]-stats_after_checkpoint["vell2_begin"])&lt;0.1</test>
    <test name="ScalarL2IncreasedAfter" language="python">assert stats_after_checkpoint['scalarl2_begin']&lt;stats_after_checkpoint['scalarl2_end']</test>
    <test name="NodesConstantAfter" language="python">assert abs(stats_after_checkpoint['nodes_begin']-stats_after_checkpoint['nodes_end'])&lt;10</test>
    <test name="MeshMovementMin" language="python">assert abs(stats['asbmin']+0.06)&lt;1e-3</test>
    <test name="MeshMovedBackTop" language="python">assert abs(stats_after_checkpoint['asbmax']-2.00)&lt;3e-3</test>
    <test name="MeshMovedBackBottom" language="python">assert abs(stats_after_checkpoint['asbmin'])&lt;3e-3</test>
    <test name="SmallError" language="python">assert abs(stats_after_checkpoint['error'])&lt;0.02</test>
  </pass_tests>
</testproblem>
