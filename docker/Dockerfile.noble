# DockerFile for a Fludity development container

# Use a Noble base image
FROM ubuntu:noble
RUN userdel -r ubuntu

# This DockerFile is looked after by
LABEL MAINTAINER="Tim Greaves"

# Installs shouldn't expect input
ENV DEBIAN_FRONTEND=noninteractive

# Package updates and installs
RUN apt-get update && \
     apt-get -y dist-upgrade && \
     apt-get -y install gnupg dirmngr && \
     echo "deb http://ppa.launchpad.net/fluidity-core/ppa/ubuntu noble main" > /etc/apt/sources.list.d/fluidity-core-ppa-noble.list && \
     gpg --keyserver keyserver.ubuntu.com --recv 0D45605A33BAC3BE && \
     gpg --export --armor 33BAC3BE | apt-key add - && \
     apt-get update && \
     echo "Europe/London" > /etc/timezone && \
     apt-get -y install fluidity-dev texlive-pstricks texlive texlive-latex-extra texlive-science \
     python3-pip python3-numpy python3.12-venv libvtk9-dev libparmetis-dev gir1.2-gtksource-3.0 libnetcdff-dev && \
     rm -rf /var/cache/apt && \
     rm -rf /var/lib/apt/lists


WORKDIR /usr/local
RUN curl -fsL https://gmsh.info/bin/Linux/gmsh-4.8.3-Linux64.tgz | tar --strip-components=1 -zxf -
RUN curl -LO https://github.com/sandialabs/Zoltan/archive/refs/tags/v3.83.tar.gz && \
    tar -zxf v3.83.tar.gz && rm v3.83.tar.gz && \
    cd Zoltan-3.83 && mkdir build && cd build && \
    ../configure --prefix=/usr/local/zoltan --with-parmetis --with-parmetis-libdir=default --enable-mpi --with-mpi-compilers --enable-f90interface --with-fcflags="-fallow-argument-mismatch" && \
    make everything && make install

ENV PETSC_DIR=/usr/lib/petscdir/3.19
ENV LDFLAGS=-L/usr/lib/x86_64-linux-gnu/hdf5/openmpi
ENV CPPFLAGS=-I/usr/include/hdf5/openmpi
ENV OMPI_MCA_btl_vader_single_copy_mechanism=none
ENV OMPI_MCA_rmaps_base_oversubscribe=1
ENV FCFLAGS="-I/usr/local/zoltan/include -L/usr/local/zoltan/lib"

# Add a Fluidity user who will be the default user for this container
# Make sure the user has a userid matching the host system
# -- pass this as an argument at build time
ARG userid=1000
RUN adduser --disabled-password --gecos "" -u $userid fluidity

USER fluidity
WORKDIR /home/fluidity

# Create a virtual environment
RUN python3 -m venv python_venv

# Install packages using the venv's pip
RUN python_venv/bin/pip install --upgrade pip
RUN python_venv/bin/pip install junit-xml
