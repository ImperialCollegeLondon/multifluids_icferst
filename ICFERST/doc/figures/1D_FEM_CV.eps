%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 83 422 513 515 
%%LanguageLevel: 2
%%Creator: CorelDRAW 10
%%Title: CV1D.eps
%%CreationDate: Tue Nov 13 17:09:53 2001
%%For: Dr Cassiano R E de Oliveira
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
86.25883 453.31824 510.92107 455.22255 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
86.25883 453.31824 m
510.92107 455.22255 L
S

@rax %Note: Object
84.35395 424.75351 84.35509 481.88296 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
84.35452 481.88296 m
84.35452 424.75351 L
S

@rax %Note: Object
226.13443 425.61468 226.13556 482.74413 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
226.13499 482.74413 m
226.13499 425.61468 L
S

@rax %Note: Object
367.91490 424.57153 367.91603 481.70098 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
367.91546 481.70098 m
367.91546 424.57153 L
S

@rax %Note: Object
511.59969 427.33701 511.60082 484.46646 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
511.60025 484.46646 m
511.60025 427.33701 L
S

@rax 149.10123 478.25150 180.06718 509.52954 @E
[0.00028346 0.00000000 0.00000000 0.00028346 149.10122289 485.69157278] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (T) @t
73491 84095 m
74422 64368 L
72051 64368 L
71607 67839 70993 70316 70189 71819 c
68919 74210 67204 75967 65088 77110 c
62950 78253 60156 78825 56684 78825 c
44831 78825 L
44831 14563 l
44831 9398 45403 6181 46503 4890 c
48070 3154 50504 2286 53763 2286 c
56684 2286 L
56684 0 L
21019 0 L
21019 2286 L
24003 2286 l
27559 2286 30078 3366 31560 5525 c
32470 6837 32935 9864 32935 14563 c
32935 78825 L
22818 78825 l
18902 78825 16108 78528 14457 77957 c
12298 77174 10456 75650 8932 73427 c
7408 71184 6498 68178 6202 64368 C
3852 64368 L
4847 84095 L
73491 84095 L
@c
F
T
@rax 149.10123 478.25150 180.06718 509.52954 @E
[0.00028346 0.00000000 0.00000000 0.00028346 149.10122289 485.69157278] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 149.10123 478.25150 180.06718 509.52954 @E
[0.00028346 0.00000000 0.00000000 0.00028346 149.10122289 485.69157278] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 63500.00000 z
%CHAR: 77576 -25400 (u) @t
104458 3006 m
104458 -14203 l
104458 -17494 104532 -19505 104691 -20235 c
104849 -20976 105093 -21484 105431 -21770 c
105781 -22066 106172 -22204 106627 -22204 c
107273 -22204 107993 -22034 108797 -21675 C
109231 -22765 L
100732 -26268 L
99346 -26268 L
99346 -20256 L
96901 -22902 95039 -24564 93758 -25241 c
92477 -25929 91123 -26268 89705 -26268 c
88106 -26268 86731 -25813 85556 -24892 c
84392 -23971 83577 -22786 83122 -21336 c
82667 -19886 82444 -17843 82444 -15198 c
82444 -2519 l
82444 -1175 82296 -243 82010 275 c
81725 794 81291 1185 80719 1471 c
80158 1746 79121 1873 77640 1852 C
77640 3006 L
87588 3006 L
87588 -16002 l
87588 -18648 88054 -20383 88974 -21209 c
89895 -22045 91006 -22458 92308 -22458 c
93197 -22458 94202 -22172 95324 -21622 c
96457 -21061 97790 -19992 99346 -18426 C
99346 -2328 l
99346 -720 99050 370 98457 942 c
97864 1503 96647 1810 94785 1852 C
94785 3006 L
104458 3006 L
@c
F
T
@rax 149.10123 478.25150 180.06718 509.52954 @E
[0.00028346 0.00000000 0.00000000 0.00028346 149.10122289 485.69157278] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 287.07307 479.11266 316.46126 510.39071 @E
[0.00028346 0.00000000 0.00000000 0.00028346 287.07306036 486.55273811] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (T) @t
73491 84095 m
74422 64368 L
72051 64368 L
71607 67839 70993 70316 70189 71819 c
68919 74210 67204 75967 65088 77110 c
62950 78253 60156 78825 56684 78825 c
44831 78825 L
44831 14563 l
44831 9398 45403 6181 46503 4890 c
48070 3154 50504 2286 53763 2286 c
56684 2286 L
56684 0 L
21019 0 L
21019 2286 L
24003 2286 l
27559 2286 30078 3366 31560 5525 c
32470 6837 32935 9864 32935 14563 c
32935 78825 L
22818 78825 l
18902 78825 16108 78528 14457 77957 c
12298 77174 10456 75650 8932 73427 c
7408 71184 6498 68178 6202 64368 C
3852 64368 L
4847 84095 L
73491 84095 L
@c
F
T
@rax 287.07307 479.11266 316.46126 510.39071 @E
[0.00028346 0.00000000 0.00000000 0.00028346 287.07306036 486.55273811] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 287.07307 479.11266 316.46126 510.39071 @E
[0.00028346 0.00000000 0.00000000 0.00028346 287.07306036 486.55273811] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 63500.00000 z
%CHAR: 77576 -25400 (c) @t
103685 -14605 m
102923 -18351 101420 -21230 99187 -23241 c
96954 -25262 94488 -26268 91779 -26268 c
88551 -26268 85736 -24913 83344 -22204 c
80942 -19494 79746 -15843 79746 -11229 c
79746 -6763 81079 -3133 83736 -349 c
86392 2445 89578 3842 93292 3842 c
96086 3842 98383 3101 100182 1619 c
101981 148 102881 -1386 102881 -2984 c
102881 -3768 102627 -4403 102119 -4889 c
101611 -5376 100902 -5620 99992 -5620 c
98774 -5620 97854 -5228 97229 -4445 c
96880 -4011 96647 -3175 96541 -1958 c
96425 -741 96002 191 95282 836 c
94552 1450 93557 1757 92276 1757 c
90202 1757 88540 995 87281 -529 c
85609 -2561 84773 -5239 84773 -8562 c
84773 -11949 85598 -14944 87270 -17537 c
88932 -20129 91176 -21431 94012 -21431 c
96033 -21431 97854 -20743 99462 -19357 c
100605 -18404 101706 -16679 102786 -14171 C
103685 -14605 L
@c
F
T
@rax 287.07307 479.11266 316.46126 510.39071 @E
[0.00028346 0.00000000 0.00000000 0.00028346 287.07306036 486.55273811] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 436.47080 478.06951 467.50280 509.34756 @E
[0.00028346 0.00000000 0.00000000 0.00028346 436.47078718 485.50958854] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (T) @t
73491 84095 m
74422 64368 L
72051 64368 L
71607 67839 70993 70316 70189 71819 c
68919 74210 67204 75967 65088 77110 c
62950 78253 60156 78825 56684 78825 c
44831 78825 L
44831 14563 l
44831 9398 45403 6181 46503 4890 c
48070 3154 50504 2286 53763 2286 c
56684 2286 L
56684 0 L
21019 0 L
21019 2286 L
24003 2286 l
27559 2286 30078 3366 31560 5525 c
32470 6837 32935 9864 32935 14563 c
32935 78825 L
22818 78825 l
18902 78825 16108 78528 14457 77957 c
12298 77174 10456 75650 8932 73427 c
7408 71184 6498 68178 6202 64368 C
3852 64368 L
4847 84095 L
73491 84095 L
@c
F
T
@rax 436.47080 478.06951 467.50280 509.34756 @E
[0.00028346 0.00000000 0.00000000 0.00028346 436.47078718 485.50958854] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 436.47080 478.06951 467.50280 509.34756 @E
[0.00028346 0.00000000 0.00000000 0.00028346 436.47078718 485.50958854] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 63500.00000 z
%CHAR: 77576 -25400 (d) @t
99621 -22204 m
98235 -23654 96880 -24691 95557 -25326 c
94234 -25950 92805 -26268 91281 -26268 c
88181 -26268 85471 -24966 83153 -22373 c
80846 -19780 79682 -16446 79682 -12382 c
79682 -8308 80963 -4583 83534 -1196 c
86096 2180 89387 3874 93419 3874 c
95917 3874 97991 3069 99621 1482 C
99621 6720 l
99621 9970 99547 11959 99388 12711 c
99230 13451 98986 13959 98658 14224 c
98330 14499 97917 14626 97420 14626 c
96880 14626 96171 14467 95282 14129 C
94880 15219 L
103346 18690 L
104733 18690 L
104733 -14150 l
104733 -17473 104818 -19505 104966 -20235 c
105124 -20976 105368 -21484 105717 -21770 c
106056 -22066 106458 -22204 106902 -22204 c
107463 -22204 108215 -22034 109136 -21675 C
109485 -22765 L
101050 -26268 L
99621 -26268 L
99621 -22204 L
@c
99621 -20034 m
99621 -5397 l
99494 -4000 99124 -2709 98510 -1556 c
97885 -402 97060 476 96044 1058 c
95017 1651 94023 1947 93049 1947 c
91229 1947 89609 1132 88181 -497 c
86297 -2656 85355 -5789 85355 -9927 c
85355 -14108 86265 -17304 88085 -19526 c
89906 -21749 91927 -22860 94160 -22860 c
96044 -22860 97864 -21918 99621 -20034 C
@c
F
T
@rax 436.47080 478.06951 467.50280 509.34756 @E
[0.00028346 0.00000000 0.00000000 0.00028346 436.47078718 485.50958854] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 357.35074 482.98535 387.16469 514.01735 @E
[0.00028346 0.00000000 0.00000000 0.00028346 357.35072709 490.17938364] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (T) @t
73491 84095 m
74422 64368 L
72051 64368 L
71607 67839 70993 70316 70189 71819 c
68919 74210 67204 75967 65088 77110 c
62950 78253 60156 78825 56684 78825 c
44831 78825 L
44831 14563 l
44831 9398 45403 6181 46503 4890 c
48070 3154 50504 2286 53763 2286 c
56684 2286 L
56684 0 L
21019 0 L
21019 2286 L
24003 2286 l
27559 2286 30078 3366 31560 5525 c
32470 6837 32935 9864 32935 14563 c
32935 78825 L
22818 78825 l
18902 78825 16108 78528 14457 77957 c
12298 77174 10456 75650 8932 73427 c
7408 71184 6498 68178 6202 64368 C
3852 64368 L
4847 84095 L
73491 84095 L
@c
F
T
@rax 357.35074 482.98535 387.16469 514.01735 @E
[0.00028346 0.00000000 0.00000000 0.00028346 357.35072709 490.17938364] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 357.35074 482.98535 387.16469 514.01735 @E
[0.00028346 0.00000000 0.00000000 0.00028346 357.35072709 490.17938364] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 63500.00000 z
%CHAR: 77576 -25400 (f) @t
90657 773 m
90657 -17896 l
90657 -20542 90953 -22214 91525 -22923 c
92297 -23834 93313 -24289 94594 -24289 c
97176 -24289 L
97176 -25400 L
80211 -25400 L
80211 -24289 L
81481 -24289 l
82307 -24289 83069 -24077 83746 -23664 c
84423 -23252 84900 -22691 85154 -21992 c
85418 -21283 85545 -19918 85545 -17896 c
85545 773 L
80021 773 L
80021 3006 L
85545 3006 L
85545 4858 l
85545 7694 86000 10097 86911 12054 c
87821 14023 89207 15610 91080 16817 c
92954 18023 95049 18627 97388 18627 c
99558 18627 101558 17928 103378 16521 c
104574 15589 105167 14542 105167 13388 c
105167 12764 104902 12181 104362 11642 c
103823 11091 103251 10816 102627 10816 c
102151 10816 101653 10986 101124 11324 c
100595 11663 99949 12404 99187 13526 c
98425 14658 97716 15409 97081 15812 c
96436 16203 95726 16394 94943 16394 c
93991 16394 93186 16140 92520 15632 c
91864 15134 91387 14340 91091 13282 c
90805 12213 90657 9472 90657 5048 c
90657 3006 L
97981 3006 L
97981 773 L
90657 773 L
@c
F
T
@rax 357.35074 482.98535 387.16469 514.01735 @E
[0.00028346 0.00000000 0.00000000 0.00028346 357.35072709 490.17938364] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e
T
@rax 147.19691 422.35710 165.14306 438.95310 @E
[0.00028346 0.00000000 0.00000000 0.00028346 147.19690800 422.84918138] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (u) @t
53763 56811 m
53763 22394 l
53763 15812 53912 11790 54229 10329 c
54547 8848 55033 7832 55711 7260 c
56409 6668 57192 6392 58103 6392 c
59394 6392 60833 6731 62442 7451 C
63310 5271 L
46313 -1736 L
43540 -1736 L
43540 10287 L
38650 4995 34925 1672 32364 318 c
29803 -1058 27093 -1736 24257 -1736 c
21061 -1736 18309 -826 15960 1016 c
13631 2858 12002 5228 11091 8128 c
10181 11028 9737 15113 9737 20405 c
9737 45762 l
9737 48451 9440 50313 8869 51350 c
8297 52388 7430 53171 6287 53742 c
5165 54293 3090 54547 127 54504 C
127 56811 L
20024 56811 L
20024 18796 l
20024 13504 20955 10033 22797 8382 c
24638 6710 26861 5884 29464 5884 c
31242 5884 33253 6456 35497 7557 c
37761 8678 40428 10816 43540 13949 C
43540 46143 l
43540 49361 42947 51541 41762 52684 c
40577 53806 38142 54420 34417 54504 C
34417 56811 L
53763 56811 L
@c
F
T
@rax 290.88170 423.21827 305.68365 440.28850 @E
[0.00028346 0.00000000 0.00000000 0.00028346 290.88169015 423.71034671] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (c) @t
52218 21590 m
50694 14097 47689 8340 43222 4318 c
38756 275 33824 -1736 28406 -1736 c
21950 -1736 16320 974 11536 6392 c
6731 11811 4339 19114 4339 28342 c
4339 37275 7006 44535 12319 50102 c
17632 55690 24003 58484 31433 58484 c
37021 58484 41614 57002 45212 54039 c
48810 51096 50610 48027 50610 44831 c
50610 43265 50102 41995 49086 41021 c
48070 40047 46651 39561 44831 39561 c
42397 39561 40555 40344 39307 41910 c
38608 42778 38142 44450 37931 46884 c
37698 49318 36851 51181 35412 52472 c
33951 53700 31962 54314 29401 54314 c
25252 54314 21929 52790 19410 49742 c
16066 45678 14393 40323 14393 33676 c
14393 26903 16044 20913 19389 15727 c
22712 10541 27199 7938 32872 7938 c
36915 7938 40555 9313 43773 12086 c
46059 13991 48260 17441 50419 22458 C
52218 21590 L
@c
F
T
@rax 428.85354 422.17512 446.94369 447.66312 @E
[0.00028346 0.00000000 0.00000000 0.00028346 428.85352762 422.66719714] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 127000.00000 z
%CHAR: 0 0 (d) @t
44090 6392 m
41317 3493 38608 1418 35962 148 c
33316 -1101 30459 -1736 27411 -1736 c
21209 -1736 15790 868 11155 6054 c
6541 11240 4212 17907 4212 26035 c
4212 34184 6773 41635 11917 48408 c
17039 55160 23622 58547 31687 58547 c
36682 58547 40831 56938 44090 53763 C
44090 64241 l
44090 70739 43942 74718 43625 76221 c
43307 77703 42820 78719 42164 79248 c
41508 79798 40682 80052 39688 80052 c
38608 80052 37190 79735 35412 79058 C
34608 81238 L
51541 88180 L
54314 88180 L
54314 22500 l
54314 15854 54483 11790 54779 10329 c
55097 8848 55584 7832 56282 7260 c
56960 6668 57764 6392 58653 6392 c
59775 6392 61278 6731 63119 7451 C
63818 5271 L
46948 -1736 L
44090 -1736 L
44090 6392 L
@c
44090 10732 m
44090 40005 l
43836 42799 43095 45381 41868 47689 c
40619 49996 38968 51753 36936 52917 c
34883 54102 32893 54695 30946 54695 c
27305 54695 24067 53065 21209 49805 c
17441 45487 15558 39222 15558 30946 c
15558 22585 17378 16193 21019 11748 c
24659 7303 28702 5080 33168 5080 c
36936 5080 40577 6964 44090 10732 C
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF
